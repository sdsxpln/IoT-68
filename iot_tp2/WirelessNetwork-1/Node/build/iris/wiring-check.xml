<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:WirelessNetworkNodeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f75216d9dd8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f75215f8e18"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f75215f8e18"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f75215f3c38"/></to>
    </wire>
    <wire loc="27:WirelessNetworkNodeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f752162fc38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f7521433190"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f7521433190"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f752142f930"/></to>
    </wire>
    <wire loc="28:WirelessNetworkNodeAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f7521662740"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f7520801020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f7520801020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f751ffe5020"/></to>
    </wire>
    <wire loc="29:WirelessNetworkNodeAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f75216d5020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f7520801bd8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f7520801bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f751ffe5bd8"/></to>
    </wire>
    <wire loc="30:WirelessNetworkNodeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f7521647b08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f7520803390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f7520803390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f751ffe6398"/></to>
    </wire>
    <wire loc="31:WirelessNetworkNodeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f75216450d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f75207f7490"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f75207f7490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f75214023c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:WirelessNetworkNodeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f7521640890"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f7521405290"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f7521405290"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f75213d7a68"/></to>
    </wire>
    <wire loc="33:WirelessNetworkNodeAppC.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7f752163c598"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f75207f11e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f75207f11e8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f751ff0fcd8"/></to>
    </wire>
    <wire loc="34:WirelessNetworkNodeAppC.nc">
      <from><interface-ref name="Luminosity" scoped="" ref="0x7f752163fd38"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f75206588d8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f75206588d8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f751feafbc0"/></to>
    </wire>
    <wire loc="54:WirelessNetworkNodeC.nc">
      <from><interface-ref name="respondTopoReq" scoped="" ref="0x7f7521624c38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:WirelessNetworkNodeC.nc">
      <from><interface-ref name="respondSensorReq" scoped="" ref="0x7f752161d370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f75215f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f751fef9d90"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f75215f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f75200605e8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f75215f2320"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f7520c2dbf0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f75215f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7520e4b3e0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f75215f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7520f0b198"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f75215f2320"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f75201ad430"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f75215f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7521020238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f75215f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f75201dfde8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f75215f2320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f752029a398"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f7521441308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f75217d15c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f75217d15c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f752171ed88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f7521441ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f7520b27870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f7521441ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f7520c2d138"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f7521441ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f75215f1a70"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f75215f1a70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f75215e7298"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f7521440418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f75215f2320"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f75215ef690"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f75207c3388"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f75215ef690"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7520980dc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f75215ea970"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7521460ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f75215e6060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f75214604b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f75215e7938"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f752140c5e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f75215e7938"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f75215e9718"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f75215e9718"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f75215de358"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f75215e9da8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f75215ef690"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f75215d75c0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f75215cd1a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f75215cd1a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7521547430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f75215dd7f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f75215e9da8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f752159bc78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75214b3520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f75215b57e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f752151e020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f752151e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75204e4100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f75215a97e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f752150dd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f752150dd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520477100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f75215a04d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f75214fe8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f75214fe8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520410100"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f7521595af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752149ac38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f75215cb4d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7521545740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7521545740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752060ac38"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f75215a21a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f75215005b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f75215005b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520416100"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f75215c97e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f752153e930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f752153e930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75205b5180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f75215bd968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f752152c740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f752152c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520548100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f75215b2c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f752151b430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f752151b430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75204da100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f75215a6c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7521509120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7521509120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752046d100"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f75215d1c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f752154b020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f752154b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752061ac38"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f75215c5c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f752153ad60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f752153ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75205ab100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f75215bae00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7521529bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7521529bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752053e100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f75215ad1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f75215178c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f75215178c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75204d1100"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f752159d968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f75214fbd60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f75214fbd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520406100"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f75215977e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75214a4c38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f75215ab4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f7521510a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f7521510a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752047d100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7521547430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520610c38"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f75215c1348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7521536120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7521536120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75205a2100"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f75215994d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75214afcd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f75215bf658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f752152e500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f752152e500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752054e180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f75215b4968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f752151d120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f752151d120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75204e1100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f75215a8968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f752150ce18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f752150ce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520473100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f752159f658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f75214fda50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f75214fda50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752040d100"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f75215ca658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f75215448c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f75215448c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520607c38"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f75215c7968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f752153ca50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f752153ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75205b2100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f75215bcaf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f752152b8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f752152b8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520544100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f75215b1e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f752151a5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f752151a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75204d7100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f75215a5e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f75215082a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f75215082a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752046a100"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f75215d0e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f752154a120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f752154a120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520616c38"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f75215c4e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f7521539e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f7521539e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75205a8100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f75215b8020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7521528d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7521528d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752053b100"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f752159caf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f75214fae18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f75214fae18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520403100"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f75215b6348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7521520e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7521520e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75204e7180"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f75215aa658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f752150fbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f752150fbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752047a100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f75215a1348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f75214ff740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f75214ff740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520413100"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f7521596968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752149f3e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f75215cc348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f75215465b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f75215465b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752060dc38"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f75215c04d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f75215352a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f75215352a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752059f100"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f75215a3020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7521501500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7521501500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520419180"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f75215be7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f752152d5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f752152d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f752054b100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f75215b3af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f752151c2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f752151c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75204de100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f75215a7af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f752150a020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f752150a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520470100"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f752159e7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f75214fcbd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f75214fcbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520409100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f75215e0a70"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f752154ddc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f752154ddc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520627c38"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f75215c6af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f752153bbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f752153bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75205af100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f75215bbc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f752152aa50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f752152aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520541100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f75215af020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f7521518740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f7521518740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75204d4100"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f7521598658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75214a93e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f75215ac348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f7521511930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f7521511930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520480180"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f75215b71a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f7521527e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f7521527e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520538100"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f75215ce020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f75215492a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f75215492a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f7520613c38"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f75215c2100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f7521537020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f7521537020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f75205a5100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f752171dc58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f7521719168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f75217d0e28"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f75216fc988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f7520d91b78"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f752140c5e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f752142f368"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f752142d020"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f752140f090"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f752140f090"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f75215d0e00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f752142c190"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f752140e378"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f752140e378"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f75215d1c78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f752142b338"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f752140d500"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f752140d500"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f75215e0a70"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f75213d7a68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f75213aec50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f75214004f0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f75213d0348"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f75213d0348"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f75213a8498"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f7521400ac8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f75213ce2a8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f75213ce2a8"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f75213a49e8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f7521404270"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f75213d4aa8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f75213d4aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f75213abc30"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f7521401020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f75213d2818"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f75213d2818"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f75213a9968"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f75213fa080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f75213cb020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f75213cb020"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f752138a6a8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f75214023c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f75213d3c38"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f75213d3c38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f75213aadc0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f75213f6998"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f75213cc658"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f75213cc658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f7521393cb8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f75213e9e78"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f75213cbab8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f75213cbab8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f75213892d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f75213ff758"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f75213cd020"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f75213cd020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f75213a5378"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f75213e58f0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f75213ca780"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f75213ca780"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f7521388020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f75213dc5e8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f75213b7978"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f75213b7978"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f752137c298"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f75213db478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f75213b2860"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f75213b2860"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7521378378"/></to>
    </wire>
    <wire loc="215:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f75213aec50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f7520fc4020"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f75213be0c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f7521381348"/></to>
    </wire>
    <wire loc="305:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f7521381348"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f7520c490c8"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7521378378"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7520c95270"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f75213a8498"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f75211dc020"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f75213a49e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f75211df578"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f75213abc30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f75211de388"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f75213a9968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f75211dd7e0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f75213c2d80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f7521384020"/></to>
    </wire>
    <wire loc="303:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f7521384020"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f7520c4dcd0"/></to>
    </wire>
    <wire loc="216:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f752138a6a8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f7520fc2888"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f75213aadc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f75211dd0c8"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f752137c298"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f7520c91020"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f75213b65a8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f752137ee78"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f752137ee78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f7520c40220"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f75213c3930"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f7521388b78"/></to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f7521388b78"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f7520c44860"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f7521393cb8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f7520ef4e38"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f75213cf020"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f75213a71c8"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f75213a71c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f75211dc738"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f75213892d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f7520fe2268"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f75213a5378"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f75211e0020"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f7521388020"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f7520f51268"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f75213b8990"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f752137e668"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f752137e668"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f7520c419d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f75213cfbb0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f75213a7d58"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f75213a7d58"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f75211dce50"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f7520fc4020"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f7520fc0490"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7f7520c490c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7f7520c24020"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f75213a2710"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f752112d840"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7f7521394b58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7521161200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7521161200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7520298720"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f75211dc020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f75202f0388"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f75211de388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f75202f2698"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f75211dd7e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f75202f1c28"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f752138b9c0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f752105c900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7f752105c900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f752022ed98"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f7521393020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f752115c980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f7520c4dcd0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f7520c28b48"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f7520fc2888"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f75201b5458"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f75211df578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f75202f3888"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f75211dd0c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f75202f1510"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f7520c91020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f7520121660"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f7520c40220"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f7520b2b438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f7520c44860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f7520c1f860"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f752139a250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f752112e578"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x7f75211dc738"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x7f75202f0aa0"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f7520fe2268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f7520fde470"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7f7520f51268"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7f75201ac9c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f75211e0020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f75202f4268"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7520c95270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7520125958"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f75213a2020"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f752112d2a8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f7520c419d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f7520c1c9d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x7f75211dce50"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x7f75202ee1e0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f752132e5e8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f752105f980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f752105f980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f7520235d50"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f75213283f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f75212c7910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f752132b730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f7520c91020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7f7521321688"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c4ebd8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c4ebd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c29a50"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7521296958"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f7520c3e4b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7520c3e4b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f7520b2f2e0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f75211d82a8"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f7521349760"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f75211d92a8"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f75211d1100"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f75211d9b90"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7f75210ee060"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f75211db4d0"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7f75210ee638"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f75211c23f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7521161200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f75211d1a48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7f75210ef740"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f752112de38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f752105f980"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7521129ba0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7f7521122838"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f75211285b8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7f75210f02a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f752112ad98"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7f75210f0880"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f75210ec490"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f7520ff3470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f7520ff3470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f75201e3da0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f75210ecd78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f7520fe3bd0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f7520fe3bd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f7520fe05b8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f75210eb378"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f752105bb98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f752105bb98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f752022c020"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f752105aab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f7520fe2e20"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f7520fe2e20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f7520fe0b90"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f7520ff1580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7f752135eb40"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7520ff2510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f7520fe32e8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f7520fe32e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f7520fe1c38"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f7520fdfa10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f7520ef4e38"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7520fe1c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f7520fc4a90"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f7520fc4a90"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f7520fbf020"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7520fe05b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f7520fc3430"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f7520fc3430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f7520fbf908"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f7520fe0b90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f7520fc39c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f7520fc39c8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f7520fbe020"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f7520fc0490"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f7520f53708"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f7520f53708"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f75201ae870"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7520fbf020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f7520f522a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f7520f522a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f75201ada08"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7520fbf908"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f7520f52b90"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f7520f52b90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f75201ac430"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f7520fbe020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c8e9f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c8e9f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f752011e080"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f7520f50a10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f7520efc640"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f7520efc640"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f7520172b58"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f7520f4f3f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f7520ff3d18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f7520ff3d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f75201df6c8"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f7520f51b70"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f7520c615b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f7520c615b8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f7520c5ba08"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7520ff2df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f7520efb020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f7520efb020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f7520170578"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f7520ef95b8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f75213560d0"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7520efb7e0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f7520ef5e38"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7520efa120"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f7520ef4718"/></to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f7520efa840"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f75212c7910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f7520ec6740"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f7520c85660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f7520ec9840"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f75212c7910"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f7520ec85b8"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f7521363af0"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7520eca7b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f7520eaca10"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f7520eaca10"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f7520ea5020"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7520ec9120"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f7520eab3f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f7520eab3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f7520ea5908"/></to>
    </wire>
    <wire loc="259:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f7520ea35b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f7521347300"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7520ea5020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f7520c603f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f7520c603f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f7520c5a8c8"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7520ea5908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f7520c60c98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f7520c60c98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f7520c592a8"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7f7520ea40a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f7520c4e448"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f7520c4e448"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7f7520c292c0"/></to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f7520c8da30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f7520c40220"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f7520c8c9f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c660e0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f7520c8b8c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f7520c85660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f7520c65020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c4ebd8"/></to>
    </wire>
    <wire loc="286:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f7520c57060"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7f7521347300"/></to>
    </wire>
    <wire loc="287:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7520c5a8c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f7520c502c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f7520c502c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f7520c2a0c0"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f7520c592a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f7520c50bf0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f7520c50bf0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f7520c2a9e8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7f7520c5ba08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f7520c533e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f7520c533e0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f7520c2b2d0"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f7520c3b5c8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f752136ce48"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f7520c39730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f7520c91020"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f7520c35378"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f7520c85660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f7520c34020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f7520c85660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f7520c34b78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7f7520c85660"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f7520c33768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f75212c7910"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f75212c7910"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f7520314b40"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7520313af8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f7521296958"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f752030f9f0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f7521295220"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f75202eb700"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f75211f6560"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f75202ee838"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f75211db4d0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f75202ed740"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f75211d92a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f75202ec060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f75211d9b90"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f75202ec638"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f75211d82a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f7521160020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f7520297510"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7521160760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7520297c50"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7520295570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f752115f020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f7520295cf0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f752029a970"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f7520294800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f752022cdc0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f75211f6560"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f752022b890"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f752105aab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f75201dc020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f7521026d58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7f7521026d58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7f7521020850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f75201dcbd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f75201d9140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f75201d9140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f752101fb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f75201de458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f7520ff2510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f75201ded40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f7520ff2df8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7f75201dd4a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f7520ff1580"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f7520fdd100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f7520fdfa10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f75201ab450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7f7520f51b70"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f75201aa268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f7521295220"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f75201aac98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7f7520f50a10"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f75201a8578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7f7520f4f3f0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f75201a74f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7f75201a7c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7f75201a8d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f7520170d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f7520efb7e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f752016c2a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f7520ef95b8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f752016f670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f7520efa120"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f752016fd90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f7520efa840"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f752016d9d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f7520f11b98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f7520f11b98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f7520f0aa08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7f752016cd58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f7520f0eb10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f7520f0b9f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7520f15e10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7520f0b198"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f7520eae338"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f7520ea8658"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f7520eabb10"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f7520ea40a0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7f7520eadbe0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7f7520ea6020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f7520ea9268"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f7520ea4800"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f7520ea8020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f7520ea35b8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f7520ead648"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f7520ea7a08"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f7520eaed68"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f7520ea7120"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f752011aac0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f7520c8c9f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f752011ca10"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f7520c8da30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f752011baf8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f7520e51a28"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f7520e51a28"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f7520e3cc08"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7f752011ee60"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7f7520c8b8c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f7520e3cc08"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f7520cae128"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f7520e3fa98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7520cbe5e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7520e4b3e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7520e36310"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7520e36310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7520d37148"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f7520cb8858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7520d0aab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7520d05c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f7520e36c88"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f7520e36c88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f7520d378f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f7520ca5330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f7520e2de40"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f7520e2de40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7520d33a90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f7520d33a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f75200f6ca8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7520d37148"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f75200f9398"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7520d378f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f75200f9b40"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f75200f2020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7520daca08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7520daca08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7520d9b5d0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f75200eee70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f7520da5a98"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f7520da5a98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f7520d965c0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f75200ec060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f7520da4e18"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f7520da4e18"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f7520d95980"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f75200e8200"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f7520d9f228"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f7520d9f228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f7520d903d0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f7520d01cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f7520cb3930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f7520c9d1c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f7520e3fa98"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f7520c63b78"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f7520c5c020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7f7520c5f3f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7f7520c59a08"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c5fb10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7f7520c582a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f7520c5d8c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f7520c57060"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f7520c61020"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7f7520c5b430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f7520c62700"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7f7520c5ca90"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f7520b2f2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f752093ab68"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f7520c47458"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f7520c213b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f7520b2b438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f7520932400"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f7520c08100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f7520c3b5c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f7520c08e10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f7520c35378"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7f7520c07988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7f7520c34020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f7520c06518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f7520c34b78"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f7520c052b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f7520c39730"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f7520c09020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f7520b2b438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7f7520c01ab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7f7520c33768"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f7520c1b130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7f7520b38710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7f7520b38710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f75215c97e0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f7520c1a4f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7f7520b35990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f7520b35990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7520affe80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f7520c131f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f7520b335e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f7520b335e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f7520b089d0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f7520c13d00"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7f7520b32140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7f7520b32140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f75215c04d0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f7520c17e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f7520b31338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f7520b31338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f75215cb4d0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f7520c0c5e8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f7520b304c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7f7520b304c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7f7520b2acd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7f7520c01020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7f7521295220"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f7520c0ac60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f75208e03c0"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7f7520b75d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f752093ab68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f75200209d8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f7520b089d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f7520afd628"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f7520932400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f75208ecc38"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7f7520b1cc18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f75215af020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7f7520b1be08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f75215b2c78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f7520b1e540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f7520a29ca0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f7520a29ca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f7520a0e350"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f7520aff1d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f7520afc120"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f7520b08388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f7520afd020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f7520b28cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f7520b07a18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7520affe80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7520afcd88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f7520ade3c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f7520a3c748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f7520a3c748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f752005ea28"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7520add020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7520a3bc50"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7520a3bc50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f752005c020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f7520adf150"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f7520a92020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f7520a92020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f7520a8fdc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f7520add7c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f75216fd3c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f7520abdb58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f7520a83350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f75216fd3c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f7520a86c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f75215c97e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f7520a89de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f75215c7968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f7520a85020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f75215c6af0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f7520a84190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f75215c5c78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f7520a3b510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f752005d820"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f752005c8c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7520a39550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f752005b0a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f7520060bc0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f752005bb50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f7520a215e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f7520a10c90"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7520a316e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7520a17be0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f7520a1da20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f7520a0ac48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f7520a1da20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f7520a05020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f7520a1da20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f7520a01360"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f752001da30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7520a316e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f7520018a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f7520a1da20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f752097f540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7520a316e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f75208ebe48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f752090c270"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f75208f0450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f752092d108"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f752092d108"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f7520929e08"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f7520915020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f7520a316e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f751ffe6398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f751ffda530"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f751ffe5020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f7521400ac8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f751ffe5bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f75213ff758"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f75207ff2a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f751ffe32a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f751ffe32a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f75213f6998"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f751ffd92c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f752085e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f751ffd9e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f75213ff758"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f752085e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f75208172c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f7520816060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f7521404270"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f7520816c38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f75213ff758"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f7520813268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f7521400ac8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f7520812020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f75208127c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f75207f7a28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f7521400ac8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f75207f5700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f75213ff758"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f751ff0fcd8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f751ff0ba40"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f751ff0ba40"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f75207df020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f751ff09060"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f75206618d8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f75207db8d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f751ff09060"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f75207d77d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f75207d32f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f75207d1dc8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f751ff09908"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f75207df020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f7520686560"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f75207d9cc0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f75206b0880"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f752066c510"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f75207d77d8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f75206ade78"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f75207db8d8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f752066fda8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f75206b2c68"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f75206ad020"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f75207cc440"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f75207cc440"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f75207c2300"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f75206aca50"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f75208e03c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f75207d1080"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f75207c2c58"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f75207d32f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f75206d6020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f75206d6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f751fef64b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f75206d4960"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f75207d1dc8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f75207b2888"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f75207c4a18"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f75207c4a18"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f752077ecd0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f75207bfd30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f75215ea970"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f75206cf478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f75207c39b8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f75206bb268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f75206d54a8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f75206d54a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f751fef5940"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f75207790c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f75216fd3c8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f75206d6d18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f751fef5200"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f75206d40e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f751fef4578"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f751fef4e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f75206d4960"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f751fef35d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f751fef83f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f751fef05f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f751febf600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f75206cf478"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f751febfd20"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f75206cfb98"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f751febe2e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f75206bb268"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f751febd020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f75206bbe20"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f752069a0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f751feafbc0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f751feab8e0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f751feab8e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f75207df020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f751feaae60"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f75206618d8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f75207db8d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f751feaae60"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f75207d77d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f75207d32f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f75207d1dc8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f751fea9740"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="WirelessNetworkNodeC" loc="11:WirelessNetworkNodeC.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f7520e2bca0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TOne" ref="0x7f75217239f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TOne" ref="0x7f75217239f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7521763788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7521763788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7521763788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="WirelessNetworkNodeAppC.AMSenderC" loc="47(WirelessNetworkNodeAppC.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="WirelessNetworkNodeAppC.AMSenderC.SenderC" loc="47(WirelessNetworkNodeAppC.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="WirelessNetworkNodeAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(WirelessNetworkNodeAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WirelessNetworkNodeAppC.AMReceiverC" loc="43(WirelessNetworkNodeAppC.AMReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="WirelessNetworkNodeAppC.TempC" loc="41(WirelessNetworkNodeAppC.TempC):/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WirelessNetworkNodeAppC.TempC.DemoChannel" loc="39(WirelessNetworkNodeAppC.TempC.DemoChannel):/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WirelessNetworkNodeAppC.TempC.DemoChannel.AdcReadClientC" loc="21(WirelessNetworkNodeAppC.TempC.DemoChannel.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WirelessNetworkNodeAppC.PhotoC" loc="41(WirelessNetworkNodeAppC.PhotoC):/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WirelessNetworkNodeAppC.PhotoC.DemoChannel" loc="39(WirelessNetworkNodeAppC.PhotoC.DemoChannel):/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WirelessNetworkNodeAppC.PhotoC.DemoChannel.AdcReadClientC" loc="21(WirelessNetworkNodeAppC.PhotoC.DemoChannel.AdcReadClientC):/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f7521591d00" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f752158d0c8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f752158d410" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f7521582608" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f7521582970" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f7521582cd8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f752157f060" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f75214f1508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f75214f1870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f75214f1bd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f75214f0020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f75211bfab0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f75211af170" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f7520e2bca0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f7520e2bca0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f7520e28020" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f7520e1c440" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f7520e1c440"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f7520e1c730" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7520e37c60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7520e37c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7520cffcc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7520cffcc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f7520cfc020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7520cb19f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7520cb19f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f7520981e00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f7520981e00"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f752097e1a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f752096d750" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f752096d750"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f752096a020" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f752096a020"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f752096a320" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f7520927430" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f7520927430"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f7520927b80" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f7520927b80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f752090e918" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f752090e918"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f752090b0a8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f752090b0a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f752090b470" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f752090b470"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f752090bbe8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f752090bbe8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f752090a020" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f752090a7b0" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f752090a7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f752088c758" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f7520883348" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f752087fe20" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f752085a2a8" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f75207fb338" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DemoSensorC" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
        <short>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.</short>
        <long>&#10; The micaZ doesn't have any built-in sensors - the DemoSensor returns&#10; a constant value of 0xbeef, or just reads the ground value for the&#10; stream sensor.&#10;&#10; @author Philip Levis&#10; @authod David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="39:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f75207457e0" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f752073ce38" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f7520721da0" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f7520685020" loc="23:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f7520685020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x7f75216d9dd8" loc="13:WirelessNetworkNodeC.nc">
      <component-ref qname="WirelessNetworkNodeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f75216d9dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f75216d8170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f7521662740" loc="14:WirelessNetworkNodeC.nc">
      <component-ref qname="WirelessNetworkNodeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f7521662740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7521662a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7521662c18"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7521662da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75216d6020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75216d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f7521647b08" loc="16:WirelessNetworkNodeC.nc">
      <component-ref qname="WirelessNetworkNodeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f7521647b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7521647e58"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7521652020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75216521a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f7521652330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75216524b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f7521640890" loc="18:WirelessNetworkNodeC.nc">
      <component-ref qname="WirelessNetworkNodeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x7f7521640890"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f7521640be0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7521640d68"/>
        <function-ref name="start" scoped="" ref="0x7f7521650020"/>
        <function-ref name="stop" scoped="" ref="0x7f75216501a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="respondTopoReq" ref="0x7f7521624c38" loc="54:WirelessNetworkNodeC.nc">
      <component-ref qname="WirelessNetworkNodeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="respondTopoReq" scoped="" ref="0x7f7521624c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7521622020"/>
        <function-ref name="runTask" scoped="" ref="0x7f75216221a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Luminosity" ref="0x7f752163fd38" loc="20:WirelessNetworkNodeC.nc">
      <component-ref qname="WirelessNetworkNodeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Luminosity" scoped="" ref="0x7f752163fd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f752163e8b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f752163ed08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f75216450d0" loc="17:WirelessNetworkNodeC.nc">
      <component-ref qname="WirelessNetworkNodeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f75216450d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7521645420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="respondSensorReq" ref="0x7f752161d370" loc="67:WirelessNetworkNodeC.nc">
      <component-ref qname="WirelessNetworkNodeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="respondSensorReq" scoped="" ref="0x7f752161d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f752161d6c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f752161d848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f752162fc38" loc="21:WirelessNetworkNodeC.nc">
      <component-ref qname="WirelessNetworkNodeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f752162fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f7521639020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f75216391a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f7521639330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f75216394b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7521639640"/>
        <function-ref name="get" scoped="" ref="0x7f75216397c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7521639950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f7521638020"/>
        <function-ref name="set" scoped="" ref="0x7f7521639ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f7521639c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f7521639de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temperature" ref="0x7f752163c598" loc="19:WirelessNetworkNodeC.nc">
      <component-ref qname="WirelessNetworkNodeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x7f752163c598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f752163f118"/>
        <function-ref name="readDone" scoped="" ref="0x7f752163f568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f75216d5020" loc="15:WirelessNetworkNodeC.nc">
      <component-ref qname="WirelessNetworkNodeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f75216d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f75216d5370"/>
        <function-ref name="source" scoped="" ref="0x7f75216d54f8"/>
        <function-ref name="address" scoped="" ref="0x7f75216d5680"/>
        <function-ref name="destination" scoped="" ref="0x7f75216d5808"/>
        <function-ref name="setSource" scoped="" ref="0x7f75216d5990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f75216d5b18"/>
        <function-ref name="type" scoped="" ref="0x7f75216d5ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f75216d5e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f7521663020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f75216631a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f7521663330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f75215f2320" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f75215f2320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75215f2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f75215f8e18" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f75215f8e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f75215f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f75215ef690" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f75215ef690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75215ef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f75215f1a70" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f75215f1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75215f1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f75215ea970" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f75215ea970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f75215eacc0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f75215eae48"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f75215ef020"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f75215ef1a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f75215ef330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f75215e7938" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f75215e7938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75215e7c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f75215e7298" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f75215e7298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75215e75e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f75215e6060" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f75215e6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75215e63b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f75215e9da8" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f75215e9da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75215e1170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f75215e9718" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f75215e9718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75215e9a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f75215dd7f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f75215dd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75215ddb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f75215d75c0" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f75215d75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215d7910"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215d7a98"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215d7c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215d7da8"/>
        <function-ref name="get" scoped="" ref="0x7f75215dd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215dd1a8"/>
        <function-ref name="set" scoped="" ref="0x7f75215dd330"/>
        <function-ref name="clr" scoped="" ref="0x7f75215dd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f75215de358" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f75215de358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75215de6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f752159bc78" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f752159bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752159a5e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f752159a770"/>
        <function-ref name="toggle" scoped="" ref="0x7f752159a8f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752159aa80"/>
        <function-ref name="get" scoped="" ref="0x7f752159ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752159ad90"/>
        <function-ref name="set" scoped="" ref="0x7f7521599020"/>
        <function-ref name="clr" scoped="" ref="0x7f75215991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f75215b57e0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f75215b57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215b5b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215b5cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215b5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215b4020"/>
        <function-ref name="get" scoped="" ref="0x7f75215b41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215b4330"/>
        <function-ref name="set" scoped="" ref="0x7f75215b44b8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215b4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f75215a97e0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f75215a97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215a9b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215a9cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215a9e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215a8020"/>
        <function-ref name="get" scoped="" ref="0x7f75215a81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215a8330"/>
        <function-ref name="set" scoped="" ref="0x7f75215a84b8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215a8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f75215a04d0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f75215a04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215a0820"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215a09a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215a0b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215a0cb8"/>
        <function-ref name="get" scoped="" ref="0x7f75215a0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752159f020"/>
        <function-ref name="set" scoped="" ref="0x7f752159f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f752159f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f7521595af0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f7521595af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521595e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521594020"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215941a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521594330"/>
        <function-ref name="get" scoped="" ref="0x7f75215944b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521594640"/>
        <function-ref name="set" scoped="" ref="0x7f75215947c8"/>
        <function-ref name="clr" scoped="" ref="0x7f7521594950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f75215cb4d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f75215cb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215cb820"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215cb9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215cbb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215cbcb8"/>
        <function-ref name="get" scoped="" ref="0x7f75215cbe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215ca020"/>
        <function-ref name="set" scoped="" ref="0x7f75215ca1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215ca330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f75215a21a0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f75215a21a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215a24f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215a2678"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215a2800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215a2988"/>
        <function-ref name="get" scoped="" ref="0x7f75215a2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215a2c98"/>
        <function-ref name="set" scoped="" ref="0x7f75215a2e20"/>
        <function-ref name="clr" scoped="" ref="0x7f75215a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f75215c97e0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f75215c97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215c9b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215c9cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215c9e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215c7020"/>
        <function-ref name="get" scoped="" ref="0x7f75215c71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215c7330"/>
        <function-ref name="set" scoped="" ref="0x7f75215c74b8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215c7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f75215bd968" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f75215bd968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215bdcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215bde40"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215bc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215bc1a8"/>
        <function-ref name="get" scoped="" ref="0x7f75215bc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215bc4b8"/>
        <function-ref name="set" scoped="" ref="0x7f75215bc640"/>
        <function-ref name="clr" scoped="" ref="0x7f75215bc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f75215b2c78" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f75215b2c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215b1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215b11a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215b1330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215b14b8"/>
        <function-ref name="get" scoped="" ref="0x7f75215b1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215b17c8"/>
        <function-ref name="set" scoped="" ref="0x7f75215b1950"/>
        <function-ref name="clr" scoped="" ref="0x7f75215b1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f75215a6c78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f75215a6c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215a5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215a51a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215a5330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215a54b8"/>
        <function-ref name="get" scoped="" ref="0x7f75215a5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215a57c8"/>
        <function-ref name="set" scoped="" ref="0x7f75215a5950"/>
        <function-ref name="clr" scoped="" ref="0x7f75215a5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f75215d1c78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f75215d1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215d0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215d01a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215d0330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215d04b8"/>
        <function-ref name="get" scoped="" ref="0x7f75215d0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215d07c8"/>
        <function-ref name="set" scoped="" ref="0x7f75215d0950"/>
        <function-ref name="clr" scoped="" ref="0x7f75215d0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f75215c5c78" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f75215c5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215c4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215c41a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215c4330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215c44b8"/>
        <function-ref name="get" scoped="" ref="0x7f75215c4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215c47c8"/>
        <function-ref name="set" scoped="" ref="0x7f75215c4950"/>
        <function-ref name="clr" scoped="" ref="0x7f75215c4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f75215bae00" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f75215bae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215b91a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215b9330"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215b94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215b9640"/>
        <function-ref name="get" scoped="" ref="0x7f75215b97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215b9950"/>
        <function-ref name="set" scoped="" ref="0x7f75215b9ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215b9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f75215ad1a0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f75215ad1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215ad4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215ad678"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215ad800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215ad988"/>
        <function-ref name="get" scoped="" ref="0x7f75215adb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215adc98"/>
        <function-ref name="set" scoped="" ref="0x7f75215ade20"/>
        <function-ref name="clr" scoped="" ref="0x7f75215ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f752159d968" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f752159d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752159dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f752159de40"/>
        <function-ref name="toggle" scoped="" ref="0x7f752159c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752159c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f752159c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752159c4b8"/>
        <function-ref name="set" scoped="" ref="0x7f752159c640"/>
        <function-ref name="clr" scoped="" ref="0x7f752159c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f75215977e0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f75215977e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521597b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521597cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521597e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521596020"/>
        <function-ref name="get" scoped="" ref="0x7f75215961a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521596330"/>
        <function-ref name="set" scoped="" ref="0x7f75215964b8"/>
        <function-ref name="clr" scoped="" ref="0x7f7521596640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f75215ab4d0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f75215ab4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215ab820"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215ab9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215abb30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215abcb8"/>
        <function-ref name="get" scoped="" ref="0x7f75215abe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215aa020"/>
        <function-ref name="set" scoped="" ref="0x7f75215aa1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215aa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f75215cd1a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f75215cd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215cd4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215cd678"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215cd800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215cd988"/>
        <function-ref name="get" scoped="" ref="0x7f75215cdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215cdc98"/>
        <function-ref name="set" scoped="" ref="0x7f75215cde20"/>
        <function-ref name="clr" scoped="" ref="0x7f75215cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f75215c1348" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f75215c1348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215c1698"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215c1820"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215c19a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215c1b30"/>
        <function-ref name="get" scoped="" ref="0x7f75215c1cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215c1e40"/>
        <function-ref name="set" scoped="" ref="0x7f75215c0020"/>
        <function-ref name="clr" scoped="" ref="0x7f75215c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f75215994d0" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f75215994d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521599820"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215999a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521599b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521599cb8"/>
        <function-ref name="get" scoped="" ref="0x7f7521599e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521598020"/>
        <function-ref name="set" scoped="" ref="0x7f75215981a8"/>
        <function-ref name="clr" scoped="" ref="0x7f7521598330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f75215bf658" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f75215bf658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215bf9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215bfb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215bfcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215bfe40"/>
        <function-ref name="get" scoped="" ref="0x7f75215be020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215be1a8"/>
        <function-ref name="set" scoped="" ref="0x7f75215be330"/>
        <function-ref name="clr" scoped="" ref="0x7f75215be4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f75215b4968" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f75215b4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215b4cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215b4e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215b3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215b31a8"/>
        <function-ref name="get" scoped="" ref="0x7f75215b3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215b34b8"/>
        <function-ref name="set" scoped="" ref="0x7f75215b3640"/>
        <function-ref name="clr" scoped="" ref="0x7f75215b37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f75215a8968" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f75215a8968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215a8cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215a8e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215a71a8"/>
        <function-ref name="get" scoped="" ref="0x7f75215a7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215a74b8"/>
        <function-ref name="set" scoped="" ref="0x7f75215a7640"/>
        <function-ref name="clr" scoped="" ref="0x7f75215a77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f752159f658" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f752159f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752159f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f752159fb30"/>
        <function-ref name="toggle" scoped="" ref="0x7f752159fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752159fe40"/>
        <function-ref name="get" scoped="" ref="0x7f752159e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752159e1a8"/>
        <function-ref name="set" scoped="" ref="0x7f752159e330"/>
        <function-ref name="clr" scoped="" ref="0x7f752159e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f75215ca658" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f75215ca658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215ca9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215cab30"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215cacb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215cae40"/>
        <function-ref name="get" scoped="" ref="0x7f75215c9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215c91a8"/>
        <function-ref name="set" scoped="" ref="0x7f75215c9330"/>
        <function-ref name="clr" scoped="" ref="0x7f75215c94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f75215c7968" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f75215c7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215c7cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215c7e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215c6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215c61a8"/>
        <function-ref name="get" scoped="" ref="0x7f75215c6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215c64b8"/>
        <function-ref name="set" scoped="" ref="0x7f75215c6640"/>
        <function-ref name="clr" scoped="" ref="0x7f75215c67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f75215bcaf0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f75215bcaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215bce40"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215bb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215bb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215bb330"/>
        <function-ref name="get" scoped="" ref="0x7f75215bb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215bb640"/>
        <function-ref name="set" scoped="" ref="0x7f75215bb7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215bb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f75215b1e00" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f75215b1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215b01a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215b0330"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215b04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215b0640"/>
        <function-ref name="get" scoped="" ref="0x7f75215b07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215b0950"/>
        <function-ref name="set" scoped="" ref="0x7f75215b0ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215b0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f75215a5e00" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f75215a5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215a41a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215a4330"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215a44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215a4640"/>
        <function-ref name="get" scoped="" ref="0x7f75215a47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215a4950"/>
        <function-ref name="set" scoped="" ref="0x7f75215a4ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215a4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f75215d0e00" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f75215d0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215cf1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215cf330"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215cf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215cf640"/>
        <function-ref name="get" scoped="" ref="0x7f75215cf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215cf950"/>
        <function-ref name="set" scoped="" ref="0x7f75215cfad8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215cfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f75215c4e00" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f75215c4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215c32e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215c3470"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215c35f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215c3780"/>
        <function-ref name="get" scoped="" ref="0x7f75215c3908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215c3a90"/>
        <function-ref name="set" scoped="" ref="0x7f75215c3c18"/>
        <function-ref name="clr" scoped="" ref="0x7f75215c3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f75215b8020" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f75215b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215b8370"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215b84f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215b8680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215b8808"/>
        <function-ref name="get" scoped="" ref="0x7f75215b8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215b8b18"/>
        <function-ref name="set" scoped="" ref="0x7f75215b8ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f75215b8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f752159caf0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f752159caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752159ce40"/>
        <function-ref name="isInput" scoped="" ref="0x7f752159b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f752159b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752159b330"/>
        <function-ref name="get" scoped="" ref="0x7f752159b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752159b640"/>
        <function-ref name="set" scoped="" ref="0x7f752159b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f752159b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f75215b6348" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f75215b6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215b6898"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215b6a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215b6ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215b6d30"/>
        <function-ref name="get" scoped="" ref="0x7f75215b5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215b51a8"/>
        <function-ref name="set" scoped="" ref="0x7f75215b5330"/>
        <function-ref name="clr" scoped="" ref="0x7f75215b54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f75215aa658" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f75215aa658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215aa9a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215aab30"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215aacb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215aae40"/>
        <function-ref name="get" scoped="" ref="0x7f75215a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215a91a8"/>
        <function-ref name="set" scoped="" ref="0x7f75215a9330"/>
        <function-ref name="clr" scoped="" ref="0x7f75215a94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f75215a1348" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f75215a1348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215a1698"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215a1820"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215a19a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215a1b30"/>
        <function-ref name="get" scoped="" ref="0x7f75215a1cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215a1e40"/>
        <function-ref name="set" scoped="" ref="0x7f75215a0020"/>
        <function-ref name="clr" scoped="" ref="0x7f75215a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f7521596968" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f7521596968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521596cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521596e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521595020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215951a8"/>
        <function-ref name="get" scoped="" ref="0x7f7521595330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215954b8"/>
        <function-ref name="set" scoped="" ref="0x7f7521595640"/>
        <function-ref name="clr" scoped="" ref="0x7f75215957c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f75215cc348" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f75215cc348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215cc698"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215cc820"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215cc9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215ccb30"/>
        <function-ref name="get" scoped="" ref="0x7f75215cccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215cce40"/>
        <function-ref name="set" scoped="" ref="0x7f75215cb020"/>
        <function-ref name="clr" scoped="" ref="0x7f75215cb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f75215c04d0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f75215c04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215c0820"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215c09a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215c0b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215c0cb8"/>
        <function-ref name="get" scoped="" ref="0x7f75215c0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215bf020"/>
        <function-ref name="set" scoped="" ref="0x7f75215bf1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215bf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f75215a3020" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f75215a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215a3370"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215a34f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215a3680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215a3808"/>
        <function-ref name="get" scoped="" ref="0x7f75215a3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215a3b18"/>
        <function-ref name="set" scoped="" ref="0x7f75215a3ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f75215a3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f75215be7e0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f75215be7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215beb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215becb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215bee40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215bd020"/>
        <function-ref name="get" scoped="" ref="0x7f75215bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215bd330"/>
        <function-ref name="set" scoped="" ref="0x7f75215bd4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215bd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f75215b3af0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f75215b3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215b3e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215b2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215b21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215b2330"/>
        <function-ref name="get" scoped="" ref="0x7f75215b24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215b2640"/>
        <function-ref name="set" scoped="" ref="0x7f75215b27c8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215b2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f75215a7af0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f75215a7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215a7e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215a6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215a61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215a6330"/>
        <function-ref name="get" scoped="" ref="0x7f75215a64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215a6640"/>
        <function-ref name="set" scoped="" ref="0x7f75215a67c8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215a6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f752159e7e0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f752159e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752159eb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f752159ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752159ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752159d020"/>
        <function-ref name="get" scoped="" ref="0x7f752159d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752159d330"/>
        <function-ref name="set" scoped="" ref="0x7f752159d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f752159d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f75215e0a70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f75215e0a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215e0dc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215d1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215d11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215d1330"/>
        <function-ref name="get" scoped="" ref="0x7f75215d14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215d1640"/>
        <function-ref name="set" scoped="" ref="0x7f75215d17c8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215d1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f75215c6af0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f75215c6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215c6e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215c5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215c51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215c5330"/>
        <function-ref name="get" scoped="" ref="0x7f75215c54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215c5640"/>
        <function-ref name="set" scoped="" ref="0x7f75215c57c8"/>
        <function-ref name="clr" scoped="" ref="0x7f75215c5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f75215bbc78" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f75215bbc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215ba020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215ba1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215ba330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215ba4b8"/>
        <function-ref name="get" scoped="" ref="0x7f75215ba640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215ba7c8"/>
        <function-ref name="set" scoped="" ref="0x7f75215ba950"/>
        <function-ref name="clr" scoped="" ref="0x7f75215baad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f75215af020" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f75215af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215af370"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215af4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215af680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215af808"/>
        <function-ref name="get" scoped="" ref="0x7f75215af990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215afb18"/>
        <function-ref name="set" scoped="" ref="0x7f75215afca0"/>
        <function-ref name="clr" scoped="" ref="0x7f75215afe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f7521598658" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f7521598658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215989a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521598b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521598cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521598e40"/>
        <function-ref name="get" scoped="" ref="0x7f7521597020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215971a8"/>
        <function-ref name="set" scoped="" ref="0x7f7521597330"/>
        <function-ref name="clr" scoped="" ref="0x7f75215974b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f75215ac348" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f75215ac348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215ac698"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215ac820"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215ac9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215acb30"/>
        <function-ref name="get" scoped="" ref="0x7f75215accb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215ace40"/>
        <function-ref name="set" scoped="" ref="0x7f75215ab020"/>
        <function-ref name="clr" scoped="" ref="0x7f75215ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f75215b71a0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f75215b71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215b74f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215b7678"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215b7800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215b7988"/>
        <function-ref name="get" scoped="" ref="0x7f75215b7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215b7c98"/>
        <function-ref name="set" scoped="" ref="0x7f75215b7e20"/>
        <function-ref name="clr" scoped="" ref="0x7f75215b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f75215ce020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f75215ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215ce370"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215ce4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215ce680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215ce808"/>
        <function-ref name="get" scoped="" ref="0x7f75215ce990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215ceb18"/>
        <function-ref name="set" scoped="" ref="0x7f75215ceca0"/>
        <function-ref name="clr" scoped="" ref="0x7f75215cee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f75215c2100" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f75215c2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215c2450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215c25d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215c2760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215c28e8"/>
        <function-ref name="get" scoped="" ref="0x7f75215c2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215c2bf8"/>
        <function-ref name="set" scoped="" ref="0x7f75215c2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f75215c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f752154a120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f752154a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752154a470"/>
        <function-ref name="isInput" scoped="" ref="0x7f752154a5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752154a780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752154a908"/>
        <function-ref name="get" scoped="" ref="0x7f752154aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752154ac18"/>
        <function-ref name="set" scoped="" ref="0x7f752154ada0"/>
        <function-ref name="clr" scoped="" ref="0x7f7521549020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f75215465b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f75215465b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521546908"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521546a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521546c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521546da0"/>
        <function-ref name="get" scoped="" ref="0x7f7521545020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215451a8"/>
        <function-ref name="set" scoped="" ref="0x7f7521545330"/>
        <function-ref name="clr" scoped="" ref="0x7f75215454b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f752154ddc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f752154ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752154c170"/>
        <function-ref name="isInput" scoped="" ref="0x7f752154c2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752154c480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752154c608"/>
        <function-ref name="get" scoped="" ref="0x7f752154c790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752154c918"/>
        <function-ref name="set" scoped="" ref="0x7f752154caa0"/>
        <function-ref name="clr" scoped="" ref="0x7f752154cc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f75215492a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f75215492a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215495f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521549780"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521549908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521549a90"/>
        <function-ref name="get" scoped="" ref="0x7f7521549c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521549da0"/>
        <function-ref name="set" scoped="" ref="0x7f7521547020"/>
        <function-ref name="clr" scoped="" ref="0x7f75215471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7521545740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7521545740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521545a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521545c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521545da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521544020"/>
        <function-ref name="get" scoped="" ref="0x7f75215441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521544330"/>
        <function-ref name="set" scoped="" ref="0x7f75215444b8"/>
        <function-ref name="clr" scoped="" ref="0x7f7521544640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f752154b020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f752154b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752154b370"/>
        <function-ref name="isInput" scoped="" ref="0x7f752154b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752154b680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752154b808"/>
        <function-ref name="get" scoped="" ref="0x7f752154b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752154bb18"/>
        <function-ref name="set" scoped="" ref="0x7f752154bca0"/>
        <function-ref name="clr" scoped="" ref="0x7f752154be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7521547430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7521547430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521547780"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521547908"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521547a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521547c18"/>
        <function-ref name="get" scoped="" ref="0x7f7521547da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521546020"/>
        <function-ref name="set" scoped="" ref="0x7f75215461a8"/>
        <function-ref name="clr" scoped="" ref="0x7f7521546330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f75215448c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f75215448c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521544c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521544da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521543020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215431a8"/>
        <function-ref name="get" scoped="" ref="0x7f7521543330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215434b8"/>
        <function-ref name="set" scoped="" ref="0x7f7521543640"/>
        <function-ref name="clr" scoped="" ref="0x7f75215437c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520627c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520627c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752061c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f752061c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752061c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752061c4b8"/>
        <function-ref name="get" scoped="" ref="0x7f752061c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752061c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f752061c950"/>
        <function-ref name="clr" scoped="" ref="0x7f752061cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752061ac38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752061ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520618020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75206181a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520618330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75206184b8"/>
        <function-ref name="get" scoped="" ref="0x7f7520618640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75206187c8"/>
        <function-ref name="set" scoped="" ref="0x7f7520618950"/>
        <function-ref name="clr" scoped="" ref="0x7f7520618ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520616c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520616c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520615020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75206151a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520615330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75206154b8"/>
        <function-ref name="get" scoped="" ref="0x7f7520615640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75206157c8"/>
        <function-ref name="set" scoped="" ref="0x7f7520615950"/>
        <function-ref name="clr" scoped="" ref="0x7f7520615ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520613c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520613c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520612020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75206121a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520612330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75206124b8"/>
        <function-ref name="get" scoped="" ref="0x7f7520612640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75206127c8"/>
        <function-ref name="set" scoped="" ref="0x7f7520612950"/>
        <function-ref name="clr" scoped="" ref="0x7f7520612ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520610c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520610c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752060f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f752060f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752060f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752060f4b8"/>
        <function-ref name="get" scoped="" ref="0x7f752060f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752060f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f752060f950"/>
        <function-ref name="clr" scoped="" ref="0x7f752060fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752060dc38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752060dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752060c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f752060c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752060c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752060c4b8"/>
        <function-ref name="get" scoped="" ref="0x7f752060c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752060c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f752060c950"/>
        <function-ref name="clr" scoped="" ref="0x7f752060cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752060ac38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752060ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520609020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75206091a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520609330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75206094b8"/>
        <function-ref name="get" scoped="" ref="0x7f7520609640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75206097c8"/>
        <function-ref name="set" scoped="" ref="0x7f7520609950"/>
        <function-ref name="clr" scoped="" ref="0x7f7520609ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520607c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520607c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520606020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75206061a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520606330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75206064b8"/>
        <function-ref name="get" scoped="" ref="0x7f7520606640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75206067c8"/>
        <function-ref name="set" scoped="" ref="0x7f7520606950"/>
        <function-ref name="clr" scoped="" ref="0x7f7520606ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f752153bbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f752153bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752153a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f752153a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752153a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752153a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f752153a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752153a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f752153a950"/>
        <function-ref name="clr" scoped="" ref="0x7f752153aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7521537020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7521537020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521537370"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215374f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521537680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521537808"/>
        <function-ref name="get" scoped="" ref="0x7f7521537990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521537b18"/>
        <function-ref name="set" scoped="" ref="0x7f7521537ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f7521537e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f752153e930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f752153e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752153ec80"/>
        <function-ref name="isInput" scoped="" ref="0x7f752153ee08"/>
        <function-ref name="toggle" scoped="" ref="0x7f752153c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752153c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f752153c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752153c4b8"/>
        <function-ref name="set" scoped="" ref="0x7f752153c640"/>
        <function-ref name="clr" scoped="" ref="0x7f752153c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f752153ad60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f752153ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215390d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521539260"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215393e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521539570"/>
        <function-ref name="get" scoped="" ref="0x7f75215396f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521539880"/>
        <function-ref name="set" scoped="" ref="0x7f7521539a08"/>
        <function-ref name="clr" scoped="" ref="0x7f7521539b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7521536120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7521536120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521536470"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215365f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521536780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521536908"/>
        <function-ref name="get" scoped="" ref="0x7f7521536a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521536c18"/>
        <function-ref name="set" scoped="" ref="0x7f7521536da0"/>
        <function-ref name="clr" scoped="" ref="0x7f7521535020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f752153ca50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f752153ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752153cda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f752153b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f752153b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752153b330"/>
        <function-ref name="get" scoped="" ref="0x7f752153b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752153b640"/>
        <function-ref name="set" scoped="" ref="0x7f752153b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f752153b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f7521539e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f7521539e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215381a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521538330"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215384b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521538640"/>
        <function-ref name="get" scoped="" ref="0x7f75215387c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521538950"/>
        <function-ref name="set" scoped="" ref="0x7f7521538ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f7521538c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f75215352a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f75215352a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215355f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521535780"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521535908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521535a90"/>
        <function-ref name="get" scoped="" ref="0x7f7521535c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521535da0"/>
        <function-ref name="set" scoped="" ref="0x7f7521534020"/>
        <function-ref name="clr" scoped="" ref="0x7f75215341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75205b5180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75205b5180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75205b54d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f75205b5658"/>
        <function-ref name="toggle" scoped="" ref="0x7f75205b57e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75205b5968"/>
        <function-ref name="get" scoped="" ref="0x7f75205b5af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75205b5c78"/>
        <function-ref name="set" scoped="" ref="0x7f75205b5e00"/>
        <function-ref name="clr" scoped="" ref="0x7f75205b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75205b2100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75205b2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75205b2450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75205b25d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75205b2760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75205b28e8"/>
        <function-ref name="get" scoped="" ref="0x7f75205b2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75205b2bf8"/>
        <function-ref name="set" scoped="" ref="0x7f75205b2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f75205b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75205af100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75205af100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75205af450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75205af5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75205af760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75205af8e8"/>
        <function-ref name="get" scoped="" ref="0x7f75205afa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75205afbf8"/>
        <function-ref name="set" scoped="" ref="0x7f75205afd80"/>
        <function-ref name="clr" scoped="" ref="0x7f75205ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75205ab100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75205ab100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75205ab450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75205ab5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75205ab760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75205ab8e8"/>
        <function-ref name="get" scoped="" ref="0x7f75205aba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75205abbf8"/>
        <function-ref name="set" scoped="" ref="0x7f75205abd80"/>
        <function-ref name="clr" scoped="" ref="0x7f75205aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75205a8100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75205a8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75205a8450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75205a85d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75205a8760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75205a88e8"/>
        <function-ref name="get" scoped="" ref="0x7f75205a8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75205a8bf8"/>
        <function-ref name="set" scoped="" ref="0x7f75205a8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f75205a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75205a5100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75205a5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75205a5450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75205a55d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75205a5760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75205a58e8"/>
        <function-ref name="get" scoped="" ref="0x7f75205a5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75205a5bf8"/>
        <function-ref name="set" scoped="" ref="0x7f75205a5d80"/>
        <function-ref name="clr" scoped="" ref="0x7f75205a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75205a2100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75205a2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75205a2450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75205a25d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75205a2760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75205a28e8"/>
        <function-ref name="get" scoped="" ref="0x7f75205a2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75205a2bf8"/>
        <function-ref name="set" scoped="" ref="0x7f75205a2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f75205a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752059f100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752059f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752059f450"/>
        <function-ref name="isInput" scoped="" ref="0x7f752059f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752059f760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752059f8e8"/>
        <function-ref name="get" scoped="" ref="0x7f752059fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752059fbf8"/>
        <function-ref name="set" scoped="" ref="0x7f752059fd80"/>
        <function-ref name="clr" scoped="" ref="0x7f752059e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f752152c740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f752152c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752152ca90"/>
        <function-ref name="isInput" scoped="" ref="0x7f752152cc18"/>
        <function-ref name="toggle" scoped="" ref="0x7f752152cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752152b020"/>
        <function-ref name="get" scoped="" ref="0x7f752152b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752152b330"/>
        <function-ref name="set" scoped="" ref="0x7f752152b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f752152b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f7521529bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f7521529bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521528020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215281a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521528330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215284b8"/>
        <function-ref name="get" scoped="" ref="0x7f7521528640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215287c8"/>
        <function-ref name="set" scoped="" ref="0x7f7521528950"/>
        <function-ref name="clr" scoped="" ref="0x7f7521528ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f752152e500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f752152e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752152e850"/>
        <function-ref name="isInput" scoped="" ref="0x7f752152e9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752152eb60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752152ece8"/>
        <function-ref name="get" scoped="" ref="0x7f752152ee70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752152d020"/>
        <function-ref name="set" scoped="" ref="0x7f752152d1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f752152d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f752152b8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f752152b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752152bc18"/>
        <function-ref name="isInput" scoped="" ref="0x7f752152bda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f752152a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752152a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f752152a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752152a4b8"/>
        <function-ref name="set" scoped="" ref="0x7f752152a640"/>
        <function-ref name="clr" scoped="" ref="0x7f752152a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7521528d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7521528d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215270d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521527260"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215273e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521527570"/>
        <function-ref name="get" scoped="" ref="0x7f75215276f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521527880"/>
        <function-ref name="set" scoped="" ref="0x7f7521527a08"/>
        <function-ref name="clr" scoped="" ref="0x7f7521527b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f752152d5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f752152d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752152d908"/>
        <function-ref name="isInput" scoped="" ref="0x7f752152da90"/>
        <function-ref name="toggle" scoped="" ref="0x7f752152dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752152dda0"/>
        <function-ref name="get" scoped="" ref="0x7f752152c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752152c1a8"/>
        <function-ref name="set" scoped="" ref="0x7f752152c330"/>
        <function-ref name="clr" scoped="" ref="0x7f752152c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f752152aa50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f752152aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752152ada0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521529020"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215291a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521529330"/>
        <function-ref name="get" scoped="" ref="0x7f75215294b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521529640"/>
        <function-ref name="set" scoped="" ref="0x7f75215297c8"/>
        <function-ref name="clr" scoped="" ref="0x7f7521529950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f7521527e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f7521527e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215261a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521526330"/>
        <function-ref name="toggle" scoped="" ref="0x7f75215264b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521526640"/>
        <function-ref name="get" scoped="" ref="0x7f75215267c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521526950"/>
        <function-ref name="set" scoped="" ref="0x7f7521526ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f7521526c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752054e180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752054e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752054e4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f752054e658"/>
        <function-ref name="toggle" scoped="" ref="0x7f752054e7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752054e968"/>
        <function-ref name="get" scoped="" ref="0x7f752054eaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752054ec78"/>
        <function-ref name="set" scoped="" ref="0x7f752054ee00"/>
        <function-ref name="clr" scoped="" ref="0x7f752054d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752054b100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752054b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752054b450"/>
        <function-ref name="isInput" scoped="" ref="0x7f752054b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752054b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752054b8e8"/>
        <function-ref name="get" scoped="" ref="0x7f752054ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752054bbf8"/>
        <function-ref name="set" scoped="" ref="0x7f752054bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f752054a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520548100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520548100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520548450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75205485d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520548760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75205488e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520548a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520548bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520548d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520546020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520544100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520544100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520544450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75205445d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520544760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75205448e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520544a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520544bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520544d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520543020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520541100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520541100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520541450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75205415d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520541760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75205418e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520541a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520541bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520541d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520540020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752053e100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752053e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752053e450"/>
        <function-ref name="isInput" scoped="" ref="0x7f752053e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752053e760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752053e8e8"/>
        <function-ref name="get" scoped="" ref="0x7f752053ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752053ebf8"/>
        <function-ref name="set" scoped="" ref="0x7f752053ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f752053d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752053b100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752053b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752053b450"/>
        <function-ref name="isInput" scoped="" ref="0x7f752053b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752053b760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752053b8e8"/>
        <function-ref name="get" scoped="" ref="0x7f752053ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752053bbf8"/>
        <function-ref name="set" scoped="" ref="0x7f752053bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f752053a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520538100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520538100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520538450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75205385d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520538760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75205388e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520538a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520538bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520538d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520537020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f752151d120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f752151d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752151d470"/>
        <function-ref name="isInput" scoped="" ref="0x7f752151d5f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752151d780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752151d908"/>
        <function-ref name="get" scoped="" ref="0x7f752151da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752151dc18"/>
        <function-ref name="set" scoped="" ref="0x7f752151dda0"/>
        <function-ref name="clr" scoped="" ref="0x7f752151c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f752151a5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f752151a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752151a908"/>
        <function-ref name="isInput" scoped="" ref="0x7f752151aa90"/>
        <function-ref name="toggle" scoped="" ref="0x7f752151ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752151ada0"/>
        <function-ref name="get" scoped="" ref="0x7f7521518020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215181a8"/>
        <function-ref name="set" scoped="" ref="0x7f7521518330"/>
        <function-ref name="clr" scoped="" ref="0x7f75215184b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7521520e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7521520e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752151f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f752151f348"/>
        <function-ref name="toggle" scoped="" ref="0x7f752151f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752151f658"/>
        <function-ref name="get" scoped="" ref="0x7f752151f7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752151f968"/>
        <function-ref name="set" scoped="" ref="0x7f752151faf0"/>
        <function-ref name="clr" scoped="" ref="0x7f752151fc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f752151c2a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f752151c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752151c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f752151c780"/>
        <function-ref name="toggle" scoped="" ref="0x7f752151c908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752151ca90"/>
        <function-ref name="get" scoped="" ref="0x7f752151cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752151cda0"/>
        <function-ref name="set" scoped="" ref="0x7f752151b020"/>
        <function-ref name="clr" scoped="" ref="0x7f752151b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7521518740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7521518740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521518a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521518c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521518da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521517020"/>
        <function-ref name="get" scoped="" ref="0x7f75215171a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521517330"/>
        <function-ref name="set" scoped="" ref="0x7f75215174b8"/>
        <function-ref name="clr" scoped="" ref="0x7f7521517640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f752151e020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f752151e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752151e370"/>
        <function-ref name="isInput" scoped="" ref="0x7f752151e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752151e680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752151e808"/>
        <function-ref name="get" scoped="" ref="0x7f752151e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752151eb18"/>
        <function-ref name="set" scoped="" ref="0x7f752151eca0"/>
        <function-ref name="clr" scoped="" ref="0x7f752151ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f752151b430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f752151b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752151b780"/>
        <function-ref name="isInput" scoped="" ref="0x7f752151b908"/>
        <function-ref name="toggle" scoped="" ref="0x7f752151ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752151bc18"/>
        <function-ref name="get" scoped="" ref="0x7f752151bda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752151a020"/>
        <function-ref name="set" scoped="" ref="0x7f752151a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f752151a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f75215178c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f75215178c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521517c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521517da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521516020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215161a8"/>
        <function-ref name="get" scoped="" ref="0x7f7521516330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215164b8"/>
        <function-ref name="set" scoped="" ref="0x7f7521516640"/>
        <function-ref name="clr" scoped="" ref="0x7f75215167c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75204e7180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75204e7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75204e74d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204e7658"/>
        <function-ref name="toggle" scoped="" ref="0x7f75204e77e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204e7968"/>
        <function-ref name="get" scoped="" ref="0x7f75204e7af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75204e7c78"/>
        <function-ref name="set" scoped="" ref="0x7f75204e7e00"/>
        <function-ref name="clr" scoped="" ref="0x7f75204e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75204e4100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75204e4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75204e4450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204e45d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75204e4760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204e48e8"/>
        <function-ref name="get" scoped="" ref="0x7f75204e4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75204e4bf8"/>
        <function-ref name="set" scoped="" ref="0x7f75204e4d80"/>
        <function-ref name="clr" scoped="" ref="0x7f75204e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75204e1100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75204e1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75204e1450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204e15d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75204e1760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204e18e8"/>
        <function-ref name="get" scoped="" ref="0x7f75204e1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75204e1bf8"/>
        <function-ref name="set" scoped="" ref="0x7f75204e1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f75204e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75204de100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75204de100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75204de450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204de5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75204de760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204de8e8"/>
        <function-ref name="get" scoped="" ref="0x7f75204dea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75204debf8"/>
        <function-ref name="set" scoped="" ref="0x7f75204ded80"/>
        <function-ref name="clr" scoped="" ref="0x7f75204dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75204da100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75204da100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75204da450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204da5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75204da760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204da8e8"/>
        <function-ref name="get" scoped="" ref="0x7f75204daa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75204dabf8"/>
        <function-ref name="set" scoped="" ref="0x7f75204dad80"/>
        <function-ref name="clr" scoped="" ref="0x7f75204d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75204d7100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75204d7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75204d7450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204d75d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75204d7760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204d78e8"/>
        <function-ref name="get" scoped="" ref="0x7f75204d7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75204d7bf8"/>
        <function-ref name="set" scoped="" ref="0x7f75204d7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f75204d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75204d4100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75204d4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75204d4450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204d45d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75204d4760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204d48e8"/>
        <function-ref name="get" scoped="" ref="0x7f75204d4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75204d4bf8"/>
        <function-ref name="set" scoped="" ref="0x7f75204d4d80"/>
        <function-ref name="clr" scoped="" ref="0x7f75204d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75204d1100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75204d1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75204d1450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204d15d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75204d1760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204d18e8"/>
        <function-ref name="get" scoped="" ref="0x7f75204d1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75204d1bf8"/>
        <function-ref name="set" scoped="" ref="0x7f75204d1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f75204d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f752150fbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f752150fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752150d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f752150d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752150d330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752150d4b8"/>
        <function-ref name="get" scoped="" ref="0x7f752150d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752150d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f752150d950"/>
        <function-ref name="clr" scoped="" ref="0x7f752150dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f752150a020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f752150a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752150a370"/>
        <function-ref name="isInput" scoped="" ref="0x7f752150a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752150a680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752150a808"/>
        <function-ref name="get" scoped="" ref="0x7f752150a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752150ab18"/>
        <function-ref name="set" scoped="" ref="0x7f752150aca0"/>
        <function-ref name="clr" scoped="" ref="0x7f752150ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7521511930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7521511930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521511c80"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521511e08"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521510020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75215101a8"/>
        <function-ref name="get" scoped="" ref="0x7f7521510330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75215104b8"/>
        <function-ref name="set" scoped="" ref="0x7f7521510640"/>
        <function-ref name="clr" scoped="" ref="0x7f75215107c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f752150dd60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f752150dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752150c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f752150c260"/>
        <function-ref name="toggle" scoped="" ref="0x7f752150c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752150c570"/>
        <function-ref name="get" scoped="" ref="0x7f752150c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752150c880"/>
        <function-ref name="set" scoped="" ref="0x7f752150ca08"/>
        <function-ref name="clr" scoped="" ref="0x7f752150cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f7521509120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f7521509120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521509470"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215095f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521509780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521509908"/>
        <function-ref name="get" scoped="" ref="0x7f7521509a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521509c18"/>
        <function-ref name="set" scoped="" ref="0x7f7521509da0"/>
        <function-ref name="clr" scoped="" ref="0x7f7521508020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f7521510a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f7521510a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521510da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f752150f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f752150f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752150f330"/>
        <function-ref name="get" scoped="" ref="0x7f752150f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752150f640"/>
        <function-ref name="set" scoped="" ref="0x7f752150f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f752150f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f752150ce18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f752150ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752150b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f752150b330"/>
        <function-ref name="toggle" scoped="" ref="0x7f752150b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752150b640"/>
        <function-ref name="get" scoped="" ref="0x7f752150b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752150b950"/>
        <function-ref name="set" scoped="" ref="0x7f752150bad8"/>
        <function-ref name="clr" scoped="" ref="0x7f752150bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f75215082a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f75215082a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75215085f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521508780"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521508908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521508a90"/>
        <function-ref name="get" scoped="" ref="0x7f7521508c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521508da0"/>
        <function-ref name="set" scoped="" ref="0x7f7521507020"/>
        <function-ref name="clr" scoped="" ref="0x7f75215071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520480180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520480180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75204804d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520480658"/>
        <function-ref name="toggle" scoped="" ref="0x7f75204807e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520480968"/>
        <function-ref name="get" scoped="" ref="0x7f7520480af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520480c78"/>
        <function-ref name="set" scoped="" ref="0x7f7520480e00"/>
        <function-ref name="clr" scoped="" ref="0x7f752047f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752047d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752047d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752047d450"/>
        <function-ref name="isInput" scoped="" ref="0x7f752047d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752047d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752047d8e8"/>
        <function-ref name="get" scoped="" ref="0x7f752047da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752047dbf8"/>
        <function-ref name="set" scoped="" ref="0x7f752047dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f752047c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752047a100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752047a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752047a450"/>
        <function-ref name="isInput" scoped="" ref="0x7f752047a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752047a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752047a8e8"/>
        <function-ref name="get" scoped="" ref="0x7f752047aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752047abf8"/>
        <function-ref name="set" scoped="" ref="0x7f752047ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520479020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520477100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520477100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520477450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204775d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520477760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204778e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520477a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520477bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520477d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520475020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520473100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520473100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520473450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204735d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520473760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204738e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520473a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520473bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520473d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520472020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520470100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520470100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520470450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204705d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520470760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204708e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520470a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520470bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520470d80"/>
        <function-ref name="clr" scoped="" ref="0x7f752046f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752046d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752046d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752046d450"/>
        <function-ref name="isInput" scoped="" ref="0x7f752046d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752046d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752046d8e8"/>
        <function-ref name="get" scoped="" ref="0x7f752046da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752046dbf8"/>
        <function-ref name="set" scoped="" ref="0x7f752046dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f752046c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752046a100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752046a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752046a450"/>
        <function-ref name="isInput" scoped="" ref="0x7f752046a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752046a760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752046a8e8"/>
        <function-ref name="get" scoped="" ref="0x7f752046aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752046abf8"/>
        <function-ref name="set" scoped="" ref="0x7f752046ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520469020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f75214ff740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f75214ff740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214ffa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214ffc18"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214ffda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214fe020"/>
        <function-ref name="get" scoped="" ref="0x7f75214fe1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214fe330"/>
        <function-ref name="set" scoped="" ref="0x7f75214fe4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f75214fe640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f75214fcbd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f75214fcbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214fb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214fb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214fb330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214fb4b8"/>
        <function-ref name="get" scoped="" ref="0x7f75214fb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214fb7c8"/>
        <function-ref name="set" scoped="" ref="0x7f75214fb950"/>
        <function-ref name="clr" scoped="" ref="0x7f75214fbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f7521501500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f7521501500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521501850"/>
        <function-ref name="isInput" scoped="" ref="0x7f75215019d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521501b60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521501ce8"/>
        <function-ref name="get" scoped="" ref="0x7f7521501e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7521500020"/>
        <function-ref name="set" scoped="" ref="0x7f75215001a8"/>
        <function-ref name="clr" scoped="" ref="0x7f7521500330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f75214fe8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f75214fe8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214fec18"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214feda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214fd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214fd1a8"/>
        <function-ref name="get" scoped="" ref="0x7f75214fd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214fd4b8"/>
        <function-ref name="set" scoped="" ref="0x7f75214fd640"/>
        <function-ref name="clr" scoped="" ref="0x7f75214fd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f75214fbd60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f75214fbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214fa0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214fa260"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214fa3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214fa570"/>
        <function-ref name="get" scoped="" ref="0x7f75214fa6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214fa880"/>
        <function-ref name="set" scoped="" ref="0x7f75214faa08"/>
        <function-ref name="clr" scoped="" ref="0x7f75214fab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f75215005b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f75215005b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521500908"/>
        <function-ref name="isInput" scoped="" ref="0x7f7521500a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521500c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7521500da0"/>
        <function-ref name="get" scoped="" ref="0x7f75214ff020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214ff1a8"/>
        <function-ref name="set" scoped="" ref="0x7f75214ff330"/>
        <function-ref name="clr" scoped="" ref="0x7f75214ff4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f75214fda50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f75214fda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214fdda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214fc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214fc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214fc330"/>
        <function-ref name="get" scoped="" ref="0x7f75214fc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214fc640"/>
        <function-ref name="set" scoped="" ref="0x7f75214fc7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f75214fc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f75214fae18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f75214fae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214f91a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214f9330"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214f94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214f9640"/>
        <function-ref name="get" scoped="" ref="0x7f75214f97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214f9950"/>
        <function-ref name="set" scoped="" ref="0x7f75214f9ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f75214f9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520419180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520419180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75204194d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520419658"/>
        <function-ref name="toggle" scoped="" ref="0x7f75204197e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520419968"/>
        <function-ref name="get" scoped="" ref="0x7f7520419af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520419c78"/>
        <function-ref name="set" scoped="" ref="0x7f7520419e00"/>
        <function-ref name="clr" scoped="" ref="0x7f7520418020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520416100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520416100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520416450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204165d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520416760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204168e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520416a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520416bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520416d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520415020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520413100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520413100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520413450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204135d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520413760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204138e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520413a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520413bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520413d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520412020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520410100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520410100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520410450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204105d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520410760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204108e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520410a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520410bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520410d80"/>
        <function-ref name="clr" scoped="" ref="0x7f752040f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752040d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752040d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752040d450"/>
        <function-ref name="isInput" scoped="" ref="0x7f752040d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752040d760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752040d8e8"/>
        <function-ref name="get" scoped="" ref="0x7f752040da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752040dbf8"/>
        <function-ref name="set" scoped="" ref="0x7f752040dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f752040b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520409100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520409100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520409450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204095d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520409760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204098e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520409a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520409bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520409d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520408020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520406100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520406100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520406450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204065d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520406760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204068e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520406a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520406bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520406d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520405020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f7520403100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f7520403100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520403450"/>
        <function-ref name="isInput" scoped="" ref="0x7f75204035d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520403760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75204038e8"/>
        <function-ref name="get" scoped="" ref="0x7f7520403a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520403bf8"/>
        <function-ref name="set" scoped="" ref="0x7f7520403d80"/>
        <function-ref name="clr" scoped="" ref="0x7f7520402020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75214f23e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75214f23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214f2730"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214f28b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214f2a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214f2bc8"/>
        <function-ref name="get" scoped="" ref="0x7f75214f2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214db020"/>
        <function-ref name="set" scoped="" ref="0x7f75214db1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f75214db330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75214d8c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75214d8c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214d7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214d71a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214d7330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214d74b8"/>
        <function-ref name="get" scoped="" ref="0x7f75214d7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214d77c8"/>
        <function-ref name="set" scoped="" ref="0x7f75214d7950"/>
        <function-ref name="clr" scoped="" ref="0x7f75214d7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75214d23e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75214d23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214d2730"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214d28b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214d2a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214d2bc8"/>
        <function-ref name="get" scoped="" ref="0x7f75214d2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214d1020"/>
        <function-ref name="set" scoped="" ref="0x7f75214d11a8"/>
        <function-ref name="clr" scoped="" ref="0x7f75214d1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75214cec38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75214cec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214cd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214cd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214cd330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214cd4b8"/>
        <function-ref name="get" scoped="" ref="0x7f75214cd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214cd7c8"/>
        <function-ref name="set" scoped="" ref="0x7f75214cd950"/>
        <function-ref name="clr" scoped="" ref="0x7f75214cdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75214c83e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75214c83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214c8730"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214c88b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214c8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214c8bc8"/>
        <function-ref name="get" scoped="" ref="0x7f75214c8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214c7020"/>
        <function-ref name="set" scoped="" ref="0x7f75214c71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f75214c7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75214c3c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75214c3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214c2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214c21a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214c2330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214c24b8"/>
        <function-ref name="get" scoped="" ref="0x7f75214c2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214c27c8"/>
        <function-ref name="set" scoped="" ref="0x7f75214c2950"/>
        <function-ref name="clr" scoped="" ref="0x7f75214c2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75214be480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75214be480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214be7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214be958"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214beae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214bec68"/>
        <function-ref name="get" scoped="" ref="0x7f75214bedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214bd020"/>
        <function-ref name="set" scoped="" ref="0x7f75214bd1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f75214bd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75214b9c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75214b9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214b8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214b81a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214b8330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214b84b8"/>
        <function-ref name="get" scoped="" ref="0x7f75214b8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214b87c8"/>
        <function-ref name="set" scoped="" ref="0x7f75214b8950"/>
        <function-ref name="clr" scoped="" ref="0x7f75214b8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75214b3520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75214b3520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214b3870"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214b39f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214b3b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214b3d08"/>
        <function-ref name="get" scoped="" ref="0x7f75214b2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214b21a8"/>
        <function-ref name="set" scoped="" ref="0x7f75214b2330"/>
        <function-ref name="clr" scoped="" ref="0x7f75214b24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75214afcd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75214afcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214ae0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214ae228"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214ae3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214ae538"/>
        <function-ref name="get" scoped="" ref="0x7f75214ae6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214ae848"/>
        <function-ref name="set" scoped="" ref="0x7f75214ae9d0"/>
        <function-ref name="clr" scoped="" ref="0x7f75214aeb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75214a93e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75214a93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214a9730"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214a98b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214a9a40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214a9bc8"/>
        <function-ref name="get" scoped="" ref="0x7f75214a9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214a8020"/>
        <function-ref name="set" scoped="" ref="0x7f75214a81a8"/>
        <function-ref name="clr" scoped="" ref="0x7f75214a8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f75214a4c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f75214a4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f75214a3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214a31a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f75214a3330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214a34b8"/>
        <function-ref name="get" scoped="" ref="0x7f75214a3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214a37c8"/>
        <function-ref name="set" scoped="" ref="0x7f75214a3950"/>
        <function-ref name="clr" scoped="" ref="0x7f75214a3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752149f3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752149f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752149f730"/>
        <function-ref name="isInput" scoped="" ref="0x7f752149f8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752149fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752149fbc8"/>
        <function-ref name="get" scoped="" ref="0x7f752149fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752149e020"/>
        <function-ref name="set" scoped="" ref="0x7f752149e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f752149e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f752149ac38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f752149ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7521499020"/>
        <function-ref name="isInput" scoped="" ref="0x7f75214991a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7521499330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f75214994b8"/>
        <function-ref name="get" scoped="" ref="0x7f7521499640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f75214997c8"/>
        <function-ref name="set" scoped="" ref="0x7f7521499950"/>
        <function-ref name="clr" scoped="" ref="0x7f7521499ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f75214604b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f75214604b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f75217ef6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f75217ef6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7521460800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f7521460ae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f7521460ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f7521460e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f752145f020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f752145f1a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f752145f330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f752145f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f7521440418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f7521440418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7521440768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f75215f3c38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f75215f3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f7521441020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f7521441ce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f7521441ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75214400a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f7521441308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f7521441308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7521441658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f75214417e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f7521441968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f75217f41c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f75217f41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f75217f4518"/>
        <function-ref name="runTask" scoped="" ref="0x7f75217f46a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f75217d15c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f75217d15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75217d1918"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f75217d1aa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f75217d1c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f752171dc58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f752171dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f752171c020"/>
        <function-ref name="runTask" scoped="" ref="0x7f752171c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f7521719168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f7521719168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f75217194b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f752171ed88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f752171ed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f752171d170"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f752171d2f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f752171d480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f75216fc988" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f75216fc988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f75216fccd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f75217d0e28" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f75217d0e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f75217001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f75216fd3c8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f75216fd3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f75216fd718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f7521433190" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f7521433190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f75214334e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f7521433668"/>
        <function-ref name="led1On" scoped="" ref="0x7f75214337f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f7521433978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f7521433b00"/>
        <function-ref name="get" scoped="" ref="0x7f7521433c88"/>
        <function-ref name="led1Off" scoped="" ref="0x7f7521433e10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f75214324b8"/>
        <function-ref name="set" scoped="" ref="0x7f7521432020"/>
        <function-ref name="led0On" scoped="" ref="0x7f75214321a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f7521432330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f752142d020" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f752142d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752142d370"/>
        <function-ref name="isInput" scoped="" ref="0x7f752142d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752142d680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752142d808"/>
        <function-ref name="get" scoped="" ref="0x7f752142d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752142db18"/>
        <function-ref name="set" scoped="" ref="0x7f752142dca0"/>
        <function-ref name="clr" scoped="" ref="0x7f752142de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f752142f368" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f752142f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f752142f6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f752142c190" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f752142c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752142c4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f752142c668"/>
        <function-ref name="toggle" scoped="" ref="0x7f752142c7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752142c978"/>
        <function-ref name="get" scoped="" ref="0x7f752142cb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752142cc88"/>
        <function-ref name="set" scoped="" ref="0x7f752142ce10"/>
        <function-ref name="clr" scoped="" ref="0x7f752142b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f752142f930" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f752142f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f752142fc80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f752142fe08"/>
        <function-ref name="led1On" scoped="" ref="0x7f752142e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f752142e1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f752142e330"/>
        <function-ref name="get" scoped="" ref="0x7f752142e4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f752142e640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f752142ec60"/>
        <function-ref name="set" scoped="" ref="0x7f752142e7c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f752142e950"/>
        <function-ref name="led2On" scoped="" ref="0x7f752142ead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f752142b338" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f752142b338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752142b688"/>
        <function-ref name="isInput" scoped="" ref="0x7f752142b810"/>
        <function-ref name="toggle" scoped="" ref="0x7f752142b998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752142bb20"/>
        <function-ref name="get" scoped="" ref="0x7f752142bca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752142be30"/>
        <function-ref name="set" scoped="" ref="0x7f752142a020"/>
        <function-ref name="clr" scoped="" ref="0x7f752142a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f752140f090" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f752140f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752140f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f752140f568"/>
        <function-ref name="toggle" scoped="" ref="0x7f752140f6f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752140f878"/>
        <function-ref name="get" scoped="" ref="0x7f752140fa00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752140fb88"/>
        <function-ref name="set" scoped="" ref="0x7f752140fd10"/>
        <function-ref name="clr" scoped="" ref="0x7f752140e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f752140e378" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f752140e378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752140e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f752140e850"/>
        <function-ref name="toggle" scoped="" ref="0x7f752140e9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752140eb60"/>
        <function-ref name="get" scoped="" ref="0x7f752140ece8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752140ee70"/>
        <function-ref name="set" scoped="" ref="0x7f752140d020"/>
        <function-ref name="clr" scoped="" ref="0x7f752140d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f752140c5e8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f752140c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f752140c938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f752140d500" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f752140d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f752140d850"/>
        <function-ref name="isInput" scoped="" ref="0x7f752140d9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f752140db60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f752140dce8"/>
        <function-ref name="get" scoped="" ref="0x7f752140de70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f752140c020"/>
        <function-ref name="set" scoped="" ref="0x7f752140c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f752140c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f7521405290" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f7521405290"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f75214055e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7521405768"/>
        <function-ref name="start" scoped="" ref="0x7f75214058f0"/>
        <function-ref name="stop" scoped="" ref="0x7f7521405a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f75214004f0" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f75214004f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f7521400840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f7521400ac8" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f7521400ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7521400e18"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75213ff020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f75213ff1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75213ff330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75213ff4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f7521404270" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f7521404270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75214045c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7521404748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75214048d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7521404a58"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7521404be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f7521401020" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f7521401020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7521401370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f75213fa080" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f75213fa080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f75213fa3d0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f75213fa558"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f75213fa6e0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f75213fa868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f75214023c8" loc="44:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f75214023c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7521402718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f75213f6998" loc="51:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f75213f6998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f75213f6ce8"/>
        <function-ref name="noAck" scoped="" ref="0x7f75213f6e70"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f75213fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f75213e9e78" loc="53:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f75213e9e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f75213f51f8"/>
        <function-ref name="setRetries" scoped="" ref="0x7f75213f5380"/>
        <function-ref name="getRetries" scoped="" ref="0x7f75213f5508"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f75213f5690"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f75213f5818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f75213ff758" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f75213ff758"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f75213ffaa8"/>
        <function-ref name="source" scoped="" ref="0x7f75213ffc30"/>
        <function-ref name="address" scoped="" ref="0x7f75213ffdb8"/>
        <function-ref name="destination" scoped="" ref="0x7f75213fd020"/>
        <function-ref name="setSource" scoped="" ref="0x7f75213fd1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f75213fd330"/>
        <function-ref name="type" scoped="" ref="0x7f75213fd4b8"/>
        <function-ref name="setType" scoped="" ref="0x7f75213fd640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f75213fd7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f75213fd950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f75213fdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f75213e58f0" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f75213e58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f75213e5c40"/>
        <function-ref name="setChannel" scoped="" ref="0x7f75213e5dc8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f75213ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7f75213dc5e8" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7f75213dc5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7521763788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f75213e7a88"/>
        <function-ref name="clear" scoped="" ref="0x7f75213e4190"/>
        <function-ref name="isValid" scoped="" ref="0x7f75213e73a8"/>
        <function-ref name="set" scoped="" ref="0x7f75213e4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f75213db478" loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f75213db478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f75213daa88"/>
        <function-ref name="clear" scoped="" ref="0x7f75213d9190"/>
        <function-ref name="isValid" scoped="" ref="0x7f75213da3a8"/>
        <function-ref name="set" scoped="" ref="0x7f75213d9870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f75213d7a68" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f75213d7a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f75213d7db8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f75213d4020"/>
        <function-ref name="start" scoped="" ref="0x7f75213d41a8"/>
        <function-ref name="stop" scoped="" ref="0x7f75213d4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f75213be0c8" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f75213be0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75213bd6a0"/>
        <function-ref name="get" scoped="" ref="0x7f75213bd190"/>
        <function-ref name="isSet" scoped="" ref="0x7f75213bec48"/>
        <function-ref name="set" scoped="" ref="0x7f75213bdbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f75213b2860" loc="71:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f75213b2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f75213b1cc0"/>
        <function-ref name="clear" scoped="" ref="0x7f75213b0420"/>
        <function-ref name="isValid" scoped="" ref="0x7f75213b15e0"/>
        <function-ref name="set" scoped="" ref="0x7f75213b0b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f75213d0348" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f75213d0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f75213d0698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f75213ce2a8" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f75213ce2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75213ce5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75213ce780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f75213ce908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75213cea90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75213cec18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f75213d4aa8" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f75213d4aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75213d4df8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f75213d3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75213d31a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f75213d3330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75213d34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f75213d2818" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f75213d2818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75213d2b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f75213c2d80" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f75213c2d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75213bf388"/>
        <function-ref name="get" scoped="" ref="0x7f75213c1e38"/>
        <function-ref name="isSet" scoped="" ref="0x7f75213c1928"/>
        <function-ref name="set" scoped="" ref="0x7f75213bf898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f75213cb020" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f75213cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f75213cb370"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f75213cb4f8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f75213cb680"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f75213cb808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f75213d3c38" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f75213d3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75213d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f75213b7978" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f75213b7978"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f75213b5e10"/>
        <function-ref name="clear" scoped="" ref="0x7f75213b4558"/>
        <function-ref name="isValid" scoped="" ref="0x7f75213b5730"/>
        <function-ref name="set" scoped="" ref="0x7f75213b4c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f75213b65a8" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f75213b65a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f75213b7150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f75213c3930" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f75213c3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75213c2020"/>
        <function-ref name="get" scoped="" ref="0x7f75213c89f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f75213c84e0"/>
        <function-ref name="set" scoped="" ref="0x7f75213c2530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f75213cc658" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f75213cc658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f75213cc9a8"/>
        <function-ref name="noAck" scoped="" ref="0x7f75213ccb30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f75213cccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f75213cf020" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f75213cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75213cf370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f75213cbab8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f75213cbab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f75213cbe08"/>
        <function-ref name="setRetries" scoped="" ref="0x7f75213ca020"/>
        <function-ref name="getRetries" scoped="" ref="0x7f75213ca1a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f75213ca330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f75213ca4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f75213cd020" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f75213cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f75213cd370"/>
        <function-ref name="source" scoped="" ref="0x7f75213cd4f8"/>
        <function-ref name="address" scoped="" ref="0x7f75213cd680"/>
        <function-ref name="destination" scoped="" ref="0x7f75213cd808"/>
        <function-ref name="setSource" scoped="" ref="0x7f75213cd990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f75213cdb18"/>
        <function-ref name="type" scoped="" ref="0x7f75213cdca0"/>
        <function-ref name="setType" scoped="" ref="0x7f75213cde28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f75213cc020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f75213cc1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f75213cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f75213ca780" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f75213ca780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f75213cabd0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f75213cad58"/>
        <function-ref name="getChannel" scoped="" ref="0x7f75213c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f75213b8990" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f75213b8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f75213b8ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f75213cfbb0" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f75213cfbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75213ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f75213aec50" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f75213aec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f75213ab020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f75213ab1a8"/>
        <function-ref name="start" scoped="" ref="0x7f75213ab330"/>
        <function-ref name="stop" scoped="" ref="0x7f75213ab4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f7521381348" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f7521381348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7521380a40"/>
        <function-ref name="get" scoped="" ref="0x7f7521380530"/>
        <function-ref name="isSet" scoped="" ref="0x7f7521380020"/>
        <function-ref name="set" scoped="" ref="0x7f752137e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7f75213a2710" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7f75213a2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f75213a2a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7f7521394b58" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7f7521394b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7521399020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f75213991a8"/>
        <function-ref name="request" scoped="" ref="0x7f7521399330"/>
        <function-ref name="granted" scoped="" ref="0x7f75213994b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7521399640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f75213a8498" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f75213a8498"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f75213a87e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f75213abc30" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f75213abc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75213aa020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f75213aa1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75213aa330"/>
        <function-ref name="cancel" scoped="" ref="0x7f75213aa4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75213aa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f75213a9968" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f75213a9968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75213a9cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f752138b9c0" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f752138b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f752138bd10"/>
        <function-ref name="address" scoped="" ref="0x7f7521398020"/>
        <function-ref name="destination" scoped="" ref="0x7f75213981a8"/>
        <function-ref name="setSource" scoped="" ref="0x7f7521398330"/>
        <function-ref name="setDestination" scoped="" ref="0x7f75213984b8"/>
        <function-ref name="pan" scoped="" ref="0x7f7521398640"/>
        <function-ref name="setPan" scoped="" ref="0x7f75213987c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f7521398950"/>
        <function-ref name="localPan" scoped="" ref="0x7f7521398ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7f7521393020" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7f7521393020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7521393370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75213934f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7521393680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7521393808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7521393990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f7521384020" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f7521384020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7521383608"/>
        <function-ref name="get" scoped="" ref="0x7f75213830f8"/>
        <function-ref name="isSet" scoped="" ref="0x7f7521384ba0"/>
        <function-ref name="set" scoped="" ref="0x7f7521383b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f752138a6a8" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f752138a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f752138a9f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f752138ab80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f752138ad08"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f7521389020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7f75213a49e8" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7f75213a49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75213a4d38"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75213a3020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f75213a31a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75213a3330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75213a34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f75213aadc0" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f75213aadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75213a9170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f752137c298" loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f752137c298"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f752137b900"/>
        <function-ref name="clear" scoped="" ref="0x7f7521379020"/>
        <function-ref name="isValid" scoped="" ref="0x7f752137b220"/>
        <function-ref name="set" scoped="" ref="0x7f7521379700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f752137ee78" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f752137ee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f752137da28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f7521388b78" loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f7521388b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7521385190"/>
        <function-ref name="get" scoped="" ref="0x7f7521387c38"/>
        <function-ref name="isSet" scoped="" ref="0x7f7521387728"/>
        <function-ref name="set" scoped="" ref="0x7f75213856a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f7521393cb8" loc="68:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f7521393cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f752138a0a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f752138a228"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f752138a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f752139a250" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f752139a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f752139a5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f752139a728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f752139a8b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f752139aa38"/>
        <function-ref name="sendDone" scoped="" ref="0x7f752139abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f75213a71c8" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f75213a71c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75213a7518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f75213892d0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f75213892d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f7521389620"/>
        <function-ref name="setRetries" scoped="" ref="0x7f75213897a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f7521389930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f7521389ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f7521389c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f7521388020" loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f7521388020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f7521388370"/>
        <function-ref name="setChannel" scoped="" ref="0x7f75213884f8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7521388680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f75213a5378" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f75213a5378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f75213a56c8"/>
        <function-ref name="source" scoped="" ref="0x7f75213a5850"/>
        <function-ref name="address" scoped="" ref="0x7f75213a59d8"/>
        <function-ref name="destination" scoped="" ref="0x7f75213a5b60"/>
        <function-ref name="setSource" scoped="" ref="0x7f75213a5ce8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f75213a5e70"/>
        <function-ref name="type" scoped="" ref="0x7f75213a4020"/>
        <function-ref name="setType" scoped="" ref="0x7f75213a41a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f75213a4330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f75213a44b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f75213a4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f7521378378" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7521378378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f75213777d8"/>
        <function-ref name="clear" scoped="" ref="0x7f7521375020"/>
        <function-ref name="isValid" scoped="" ref="0x7f75213770f8"/>
        <function-ref name="set" scoped="" ref="0x7f7521375700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f75213a2020" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f75213a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75213a2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f752137e668" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f752137e668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f752137e9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f75213a7d58" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f75213a7d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75213a50d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7f7521347300" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7f7521347300"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f7521347650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7f752135bc00" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7f752135bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7f7521362020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7f7521349760" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7f7521349760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f7521349ab0"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f7521349c38"/>
        <function-ref name="source" scoped="" ref="0x7f7521349dc0"/>
        <function-ref name="destination" scoped="" ref="0x7f752135a020"/>
        <function-ref name="setSource" scoped="" ref="0x7f752135a1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f752135a330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f752135a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7f7521351570" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7f7521351570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7f75213518c0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7f7521351a48"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7f7521351bd0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7f7521351d58"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7f752135d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f75213283f0" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f75213283f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7521328740"/>
        <function-ref name="wait" scoped="" ref="0x7f75213288c8"/>
        <function-ref name="cancel" scoped="" ref="0x7f7521328a50"/>
        <function-ref name="isFree" scoped="" ref="0x7f7521328bd8"/>
        <function-ref name="getNow" scoped="" ref="0x7f7521328d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7f7521321688" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7f7521321688"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75213219d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7521321b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7521321ce8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7521321e70"/>
        <function-ref name="headerLength" scoped="" ref="0x7f752132b020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f752132b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f752132b730" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f752132b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7521326cc0"/>
        <function-ref name="clear" scoped="" ref="0x7f7521320420"/>
        <function-ref name="isValid" scoped="" ref="0x7f75213265e0"/>
        <function-ref name="set" scoped="" ref="0x7f7521320b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7f752136ce48" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7f752136ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75213711c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7521371348"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f75213714d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f7521371658"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f75213717e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7f752135c6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7f752135c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7f752135ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7f7521363af0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7f7521363af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f7521363e40"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f7521370020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f75213701a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f7521370330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f75213704b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f7521370640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f75213707c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f7521370950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f752132e5e8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f752132e5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f752132e938"/>
        <function-ref name="getDSN" scoped="" ref="0x7f752132eac0"/>
        <function-ref name="setFCF" scoped="" ref="0x7f752132ec48"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f752132edd0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f7521350020"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f75213501a8"/>
        <function-ref name="setDSN" scoped="" ref="0x7f7521350330"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f75213504b8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f7521350640"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f75213507c8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f7521350950"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f7521350ad8"/>
        <function-ref name="localAddr" scoped="" ref="0x7f7521350c60"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f7521348020"/>
        <function-ref name="localPan" scoped="" ref="0x7f75213481a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f7521348330"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f75213484b8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f7521348640"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f75213487c8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f7521348950"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f7521348ad8"/>
        <function-ref name="getFCF" scoped="" ref="0x7f7521348c60"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f7521348de8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f752132d020"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f752132d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7f752135eb40" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f752135eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f752136b020"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f752136b1a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f752136b330"/>
        <function-ref name="getSender" scoped="" ref="0x7f752136b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7f75213560d0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7f75213560d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f7521356420"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f75213565a8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f7521356730"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f75213568b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f75212c7910" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f75212c7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f75212c7c80"/>
        <function-ref name="wait" scoped="" ref="0x7f75212c7e08"/>
        <function-ref name="cancel" scoped="" ref="0x7f7521296020"/>
        <function-ref name="isFree" scoped="" ref="0x7f75212961a8"/>
        <function-ref name="getNow" scoped="" ref="0x7f7521296330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f7521296958" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f7521296958"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f75217ef6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f75217ef6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f752169a540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7521287020"/>
        <function-ref name="fired" scoped="" ref="0x7f75212880c0"/>
        <function-ref name="startAt" scoped="" ref="0x7f75212889d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7521288548"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f75212874a8"/>
        <function-ref name="start" scoped="" ref="0x7f7521289730"/>
        <function-ref name="stop" scoped="" ref="0x7f7521289c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7f7520314b40" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f7520314b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7520313020"/>
        <function-ref name="wait" scoped="" ref="0x7f75203131a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520313330"/>
        <function-ref name="isFree" scoped="" ref="0x7f75203134b8"/>
        <function-ref name="getNow" scoped="" ref="0x7f7520313640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f7520313af8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f7520313af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f752169a540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f752030f190"/>
        <function-ref name="fired" scoped="" ref="0x7f7520310230"/>
        <function-ref name="startAt" scoped="" ref="0x7f7520310b40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f75203106b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f752030f618"/>
        <function-ref name="start" scoped="" ref="0x7f7520312878"/>
        <function-ref name="stop" scoped="" ref="0x7f7520312d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f752030f9f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f752030f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f752030fd40"/>
        <function-ref name="suspend" scoped="" ref="0x7f752030e020"/>
        <function-ref name="resume" scoped="" ref="0x7f752030e1a8"/>
        <function-ref name="run" scoped="" ref="0x7f752030e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7f7521295220" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f7521295220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f7521295570"/>
        <function-ref name="suspend" scoped="" ref="0x7f75212956f8"/>
        <function-ref name="resume" scoped="" ref="0x7f7521295880"/>
        <function-ref name="run" scoped="" ref="0x7f7521295a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f75211d92a8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f75211d92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75211d95f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f75211d9780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75211d9908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f75211d9b90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f75211d9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75211d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f75211dc020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f75211dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f75211dc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f75211df578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f75211df578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75211df8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75211dfa50"/>
        <function-ref name="getPayload" scoped="" ref="0x7f75211dfbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75211dfd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75211de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f75211de388" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f75211de388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75211de6f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f75211de880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75211dea08"/>
        <function-ref name="cancel" scoped="" ref="0x7f75211deb90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75211ded18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f75211dd7e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f75211dd7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75211ddb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f75211db4d0" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f75211db4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75211db820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75211db9a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75211dbb30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75211dbcb8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f75211dbe40"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f75211d9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f75211d82a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f75211d82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f75211d85f8"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f75211d8780"/>
        <function-ref name="source" scoped="" ref="0x7f75211d8908"/>
        <function-ref name="destination" scoped="" ref="0x7f75211d8a90"/>
        <function-ref name="setSource" scoped="" ref="0x7f75211d8c18"/>
        <function-ref name="setDestination" scoped="" ref="0x7f75211d8da0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f75211d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f75211dd0c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f75211dd0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75211dd438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f75211dc738" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f75211dc738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75211dcaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f75211e0020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f75211e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f75211e0370"/>
        <function-ref name="source" scoped="" ref="0x7f75211e04f8"/>
        <function-ref name="address" scoped="" ref="0x7f75211e0680"/>
        <function-ref name="destination" scoped="" ref="0x7f75211e0808"/>
        <function-ref name="setSource" scoped="" ref="0x7f75211e0990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f75211e0b18"/>
        <function-ref name="type" scoped="" ref="0x7f75211e0ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f75211e0e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f75211df020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f75211df1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f75211df330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f75211dce50" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f75211dce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75211db1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f75202ec060" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f75202ec060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75202ec3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f75202ed740" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f75202ed740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75202eda90"/>
        <function-ref name="cancel" scoped="" ref="0x7f75202edc18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75202edda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f75202f0388" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f75202f0388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f75202f06f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f75202f3888" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f75202f3888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75202f3bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75202f3d60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f75202f2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75202f21a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75202f2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f75202f2698" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f75202f2698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75202f2a08"/>
        <function-ref name="getPayload" scoped="" ref="0x7f75202f2b90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75202f2d18"/>
        <function-ref name="cancel" scoped="" ref="0x7f75202f1020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75202f11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f75202f1c28" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f75202f1c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75202f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f75202f5470" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f75202f5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75202f57c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75202f5948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75202f5ad0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75202f5c58"/>
        <function-ref name="headerLength" scoped="" ref="0x7f75202f5de0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f75202f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f75202ec638" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f75202ec638"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f75202eca88"/>
        <function-ref name="checkFrame" scoped="" ref="0x7f75202ecc10"/>
        <function-ref name="source" scoped="" ref="0x7f75202ecd98"/>
        <function-ref name="destination" scoped="" ref="0x7f75202eb020"/>
        <function-ref name="setSource" scoped="" ref="0x7f75202eb1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f75202eb330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f75202eb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f75202eb700" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f75202eb700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f75202eba50"/>
        <function-ref name="changed" scoped="" ref="0x7f75202ebbd8"/>
        <function-ref name="amGroup" scoped="" ref="0x7f75202ebd60"/>
        <function-ref name="setAddress" scoped="" ref="0x7f75202ea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f75202ee838" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f75202ee838"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75202eeb88"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75202eed10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75202ed020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75202ed1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f75202ed330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f75202ed4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f75202f1510" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f75202f1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75202f1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x7f75202f0aa0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x7f75202f0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75202f0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f75202f4268" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f75202f4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f75202f45b8"/>
        <function-ref name="source" scoped="" ref="0x7f75202f4740"/>
        <function-ref name="address" scoped="" ref="0x7f75202f48c8"/>
        <function-ref name="destination" scoped="" ref="0x7f75202f4a50"/>
        <function-ref name="setSource" scoped="" ref="0x7f75202f4bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f75202f4d60"/>
        <function-ref name="type" scoped="" ref="0x7f75202f3020"/>
        <function-ref name="setType" scoped="" ref="0x7f75202f31a8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f75202f3330"/>
        <function-ref name="setGroup" scoped="" ref="0x7f75202f34b8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f75202f3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x7f75202ee1e0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x7f75202ee1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75202ee550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f75211f6560" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f75211f6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f75211f68b0"/>
        <function-ref name="changed" scoped="" ref="0x7f75211f6a38"/>
        <function-ref name="amGroup" scoped="" ref="0x7f75211f6bc0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f75211f6d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f75211d1a48" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f75211d1a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75211d1d98"/>
        <function-ref name="cancel" scoped="" ref="0x7f75211c2020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75211c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f75211c23f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f75211c23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f75211c2740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f75211c28c8"/>
        <function-ref name="request" scoped="" ref="0x7f75211c2a50"/>
        <function-ref name="granted" scoped="" ref="0x7f75211c2bd8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f75211c2d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f75211d1100" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f75211d1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75211d1450"/>
        <function-ref name="cancel" scoped="" ref="0x7f75211d15d8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75211d1760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7521160020" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7521160020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7521160390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7521160518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f752115f020" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f752115f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f752115f390"/>
        <function-ref name="configure" scoped="" ref="0x7f752115f518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7521161200" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7521161200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7521161570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f75211616f8"/>
        <function-ref name="request" scoped="" ref="0x7f7521161880"/>
        <function-ref name="granted" scoped="" ref="0x7f7521161a08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7521161b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7521160760" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7521160760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7521160ab0"/>
        <function-ref name="userId" scoped="" ref="0x7f7521160c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f752029a398" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f752029a398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f752029a6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f752029a970" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f752029a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f752029acc0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f752029ae48"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f7520299020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f75202991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7520297510" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7520297510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7520297880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7520297a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7520295570" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7520295570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f75202958e0"/>
        <function-ref name="configure" scoped="" ref="0x7f7520295a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f7520295cf0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f7520295cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f75202940a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f7520294228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f75202943b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f7520294538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7520298720" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7520298720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7520298a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7520298c18"/>
        <function-ref name="request" scoped="" ref="0x7f7520298da0"/>
        <function-ref name="granted" scoped="" ref="0x7f7520297020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f75202971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7520297c50" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7520297c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7520295020"/>
        <function-ref name="userId" scoped="" ref="0x7f75202951a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f7520294800" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f7520294800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7520294b50"/>
        <function-ref name="runTask" scoped="" ref="0x7f7520294cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7521129ba0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f7521129ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7521128020"/>
        <function-ref name="cancel" scoped="" ref="0x7f75211281a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7521128330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f75211285b8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f75211285b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7521128908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f752112d840" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f752112d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f752112db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f752115c980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f752115c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f752115ccd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f752115ce58"/>
        <function-ref name="getPayload" scoped="" ref="0x7f752112e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f752112e1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f752112e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f752112ad98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f752112ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7521129170"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75211292f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7521129480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7521129608"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7521129790"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7521129918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7f752112de38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f752112de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f752112c1c0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f752112c348"/>
        <function-ref name="setFCF" scoped="" ref="0x7f752112c4d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f752112c658"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f752112c7e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f752112c968"/>
        <function-ref name="setDSN" scoped="" ref="0x7f752112caf0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f752112cc78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f752112ce00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f752112b020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f752112b1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f752112b330"/>
        <function-ref name="localAddr" scoped="" ref="0x7f752112b4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f752112b740"/>
        <function-ref name="localPan" scoped="" ref="0x7f752112b8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f752112ba50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f752112bbd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f752112bd60"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f752112a020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f752112a1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f752112a330"/>
        <function-ref name="getFCF" scoped="" ref="0x7f752112a4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f752112a640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f752112a7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f752112a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f752112e578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f752112e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f752112e8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f752112ea50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f752112ebd8"/>
        <function-ref name="cancel" scoped="" ref="0x7f752112ed60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f752112d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f752112d2a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f752112d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f752112d5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f75210ec490" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f75210ec490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75210ec7e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f75210ec968"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75210ecaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f75210ecd78" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f75210ecd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75210eb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f75210f0880" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f75210f0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75210f0bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75210f0d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75210ef020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75210ef1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f75210ef330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f75210ef4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7f75210ee060" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7f75210ee060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75210ee3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f75210eb378" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f75210eb378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75210eb6c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75210eb850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75210eb9d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75210ebb60"/>
        <function-ref name="headerLength" scoped="" ref="0x7f75210ebce8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f75210ebe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7f75210ef740" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7f75210ef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75210efa90"/>
        <function-ref name="cancel" scoped="" ref="0x7f75210efc18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75210efda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7f7521122838" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7f7521122838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7521122b88"/>
        <function-ref name="cancel" scoped="" ref="0x7f7521122d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75210f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7f75210f02a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f75210f02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75210f05f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7f75210ee638" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7f75210ee638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75210ee988"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75210eeb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75210eec98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75210eee20"/>
        <function-ref name="headerLength" scoped="" ref="0x7f75210ec020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f75210ec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f752105c900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f752105c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f752105cc50"/>
        <function-ref name="address" scoped="" ref="0x7f752105cdd8"/>
        <function-ref name="destination" scoped="" ref="0x7f752105b020"/>
        <function-ref name="setSource" scoped="" ref="0x7f752105b1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f752105b330"/>
        <function-ref name="pan" scoped="" ref="0x7f752105b4b8"/>
        <function-ref name="setPan" scoped="" ref="0x7f752105b640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f752105b7c8"/>
        <function-ref name="localPan" scoped="" ref="0x7f752105b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f752105bb98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f752105bb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f752105a020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f752105a1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f752105a330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f752105a4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f752105a640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f752105a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f752105f980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f752105f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f752105fcd0"/>
        <function-ref name="getDSN" scoped="" ref="0x7f752105fe58"/>
        <function-ref name="setFCF" scoped="" ref="0x7f752105e020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f752105e1a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f752105e330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f752105e4b8"/>
        <function-ref name="setDSN" scoped="" ref="0x7f752105e640"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f752105e7c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f752105e950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f752105ead8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f752105ec60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f752105ede8"/>
        <function-ref name="localAddr" scoped="" ref="0x7f752105d020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f752105d2a8"/>
        <function-ref name="localPan" scoped="" ref="0x7f752105d430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f752105d5b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f752105d740"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f752105d8c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f752105da50"/>
        <function-ref name="isForMe" scoped="" ref="0x7f752105dbd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f752105dd60"/>
        <function-ref name="getFCF" scoped="" ref="0x7f752105c020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f752105c1a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f752105c330"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f752105c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f752105aab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f752105aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f752105ae00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7521059020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75210591a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7521059330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f75210594b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7521059640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7f752022ed98" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7f752022ed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7f752022d170"/>
        <function-ref name="address" scoped="" ref="0x7f752022d2f8"/>
        <function-ref name="destination" scoped="" ref="0x7f752022d480"/>
        <function-ref name="setSource" scoped="" ref="0x7f752022d608"/>
        <function-ref name="setDestination" scoped="" ref="0x7f752022d790"/>
        <function-ref name="pan" scoped="" ref="0x7f752022d918"/>
        <function-ref name="setPan" scoped="" ref="0x7f752022daa0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f752022dc28"/>
        <function-ref name="localPan" scoped="" ref="0x7f752022ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f752022c020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f752022c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f752022c370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f752022c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f752022c680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f752022c808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f752022c990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f752022cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7f7520235d50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7f7520235d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7f75202300d8"/>
        <function-ref name="getDSN" scoped="" ref="0x7f7520230260"/>
        <function-ref name="setFCF" scoped="" ref="0x7f75202303e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7f7520230570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7f75202306f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7f7520230880"/>
        <function-ref name="setDSN" scoped="" ref="0x7f7520230a08"/>
        <function-ref name="createAckReply" scoped="" ref="0x7f7520230b90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7f7520230d18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7f752022f020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7f752022f1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7f752022f330"/>
        <function-ref name="localAddr" scoped="" ref="0x7f752022f4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f752022f740"/>
        <function-ref name="localPan" scoped="" ref="0x7f752022f8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7f752022fa50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7f752022fbd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x7f752022fd60"/>
        <function-ref name="setDestPan" scoped="" ref="0x7f752022e020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f752022e1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f752022e330"/>
        <function-ref name="getFCF" scoped="" ref="0x7f752022e4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f752022e640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7f752022e7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x7f752022e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f752022cdc0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f752022cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f752022b170"/>
        <function-ref name="changed" scoped="" ref="0x7f752022b2f8"/>
        <function-ref name="amGroup" scoped="" ref="0x7f752022b480"/>
        <function-ref name="setAddress" scoped="" ref="0x7f752022b608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f752022b890" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f752022b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f752022bbe0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f752022bd68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f752022a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f752022a1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f752022a330"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f752022a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7520ff2510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f7520ff2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520ff2860"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520ff29e8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520ff2b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7520ff2df8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f7520ff2df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520ff1170"/>
        <function-ref name="header" scoped="" ref="0x7f7520ff12f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f7520ff3470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f7520ff3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520ff37c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520ff3948"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520ff3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f7520ff1580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f7520ff1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f7520ff18d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f7520ff1a58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f7520ff1be0"/>
        <function-ref name="getSender" scoped="" ref="0x7f7520ff1d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f7520ff3d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f7520ff3d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520ff20a0"/>
        <function-ref name="header" scoped="" ref="0x7f7520ff2228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f75201de458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f75201de458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75201de7a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f75201de930"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75201deab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f75201ded40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f75201ded40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75201dd0d8"/>
        <function-ref name="header" scoped="" ref="0x7f75201dd260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7f75201dcbd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f75201dcbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75201db020"/>
        <function-ref name="clearAll" scoped="" ref="0x7f75201db1a8"/>
        <function-ref name="get" scoped="" ref="0x7f75201db330"/>
        <function-ref name="set" scoped="" ref="0x7f75201db4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f75201e3da0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f75201e3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75201df170"/>
        <function-ref name="cancel" scoped="" ref="0x7f75201df2f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75201df480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7f75201dc020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f75201dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f75201dc370"/>
        <function-ref name="insertNode" scoped="" ref="0x7f75201dc4f8"/>
        <function-ref name="getNode" scoped="" ref="0x7f75201dc680"/>
        <function-ref name="evicted" scoped="" ref="0x7f75201dc808"/>
        <function-ref name="getIndex" scoped="" ref="0x7f75201dc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f75201df6c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f75201df6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75201dfa18"/>
        <function-ref name="header" scoped="" ref="0x7f75201dfba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f75201dfde8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f75201dfde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75201de170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7f75201dd4a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7f75201dd4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7f75201dd7f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7f75201dd980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7f75201ddb08"/>
        <function-ref name="getSender" scoped="" ref="0x7f75201ddc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f7521026d58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f7521026d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f75210230d8"/>
        <function-ref name="insertNode" scoped="" ref="0x7f7521023260"/>
        <function-ref name="getNode" scoped="" ref="0x7f75210233e8"/>
        <function-ref name="evicted" scoped="" ref="0x7f7521023570"/>
        <function-ref name="getIndex" scoped="" ref="0x7f75210236f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f752101fb18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f752101fb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f752101fe68"/>
        <function-ref name="clearAll" scoped="" ref="0x7f752101e020"/>
        <function-ref name="get" scoped="" ref="0x7f752101e1a8"/>
        <function-ref name="set" scoped="" ref="0x7f752101e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7f7521020850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7f7521020850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7f7521020ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x7f7521020d28"/>
        <function-ref name="getNode" scoped="" ref="0x7f752101f020"/>
        <function-ref name="evicted" scoped="" ref="0x7f752101f1a8"/>
        <function-ref name="getIndex" scoped="" ref="0x7f752101f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7521020238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7521020238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7521020588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7f75201d9140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7f75201d9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75201d9490"/>
        <function-ref name="clearAll" scoped="" ref="0x7f75201d9618"/>
        <function-ref name="get" scoped="" ref="0x7f75201d97a0"/>
        <function-ref name="set" scoped="" ref="0x7f75201d9928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7520fe1c38" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f7520fe1c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520fe0020"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520fe01a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520fe0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7520fe05b8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f7520fe05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520fe0908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7f7520fdd100" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7f7520fdd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f7520fdd450"/>
        <function-ref name="noAck" scoped="" ref="0x7f7520fdd5d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f7520fdd760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f7520fe32e8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f7520fe32e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520fe3638"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520fe37c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520fe3948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f7520fe2e20" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f7520fe2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520fe11a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520fe1330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520fe14b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520fe1640"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520fe17c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520fe1950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f7520fe0b90" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f7520fe0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520fdf020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520fdf1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520fdf330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520fdf4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520fdf640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520fdf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7f7520fde470" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7f7520fde470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f7520fde7c0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f7520fde948"/>
        <function-ref name="getRetries" scoped="" ref="0x7f7520fdead0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f7520fdec58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f7520fdede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f7520fe3bd0" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f7520fe3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520fe2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f7520fdfa10" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f7520fdfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f7520fdfd60"/>
        <function-ref name="noAck" scoped="" ref="0x7f7520fde020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f7520fde1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f7520fe2268" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f7520fe2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f7520fe25b8"/>
        <function-ref name="setRetries" scoped="" ref="0x7f7520fe2740"/>
        <function-ref name="getRetries" scoped="" ref="0x7f7520fe28c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f7520fe2a50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f7520fe2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f7520fc4020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f7520fc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f7520fc4370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7520fc44f8"/>
        <function-ref name="start" scoped="" ref="0x7f7520fc4680"/>
        <function-ref name="stop" scoped="" ref="0x7f7520fc4808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7520fbf020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f7520fbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520fbf370"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520fbf4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520fbf680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7520fbf908" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f7520fbf908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520fbfc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f7520fc4a90" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f7520fc4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520fc4de0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520fc3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520fc31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f7520fc39c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f7520fc39c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520fc3d18"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520fc2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520fc21a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520fc2330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520fc24b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520fc2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f7520fc2888" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f7520fc2888"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f7520fc2bd8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f7520fc2d60"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f7520fc0020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f7520fc01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f7520fc0490" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f7520fc0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f7520fc07e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7520fc0968"/>
        <function-ref name="start" scoped="" ref="0x7f7520fc0af0"/>
        <function-ref name="stop" scoped="" ref="0x7f7520fc0c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f7520fc3430" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f7520fc3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520fc3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f7520fbe020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f7520fbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520fbe370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520fbe4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520fbe680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520fbe808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520fbe990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520fbeb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f75201b5458" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f75201b5458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f75201b57a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f75201b5930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f75201b5ab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f75201b5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f7520f53708" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f7520f53708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f7520f53a58"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7520f53be0"/>
        <function-ref name="start" scoped="" ref="0x7f7520f53d68"/>
        <function-ref name="stop" scoped="" ref="0x7f7520f52020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f7520f51b70" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f7520f51b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f7520f50020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f7520f501a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f7520f50330"/>
        <function-ref name="done" scoped="" ref="0x7f7520f504b8"/>
        <function-ref name="standby" scoped="" ref="0x7f7520f50640"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7520f507c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f7520f522a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f7520f522a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520f525f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520f52780"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520f52908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f7520f4f3f0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f7520f4f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520f4f740"/>
        <function-ref name="header" scoped="" ref="0x7f7520f4f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f7520f52b90" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f7520f52b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520f51020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f7520f50a10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f7520f50a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520f50d60"/>
        <function-ref name="ready" scoped="" ref="0x7f7520f4f020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520f4f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f7520f51268" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f7520f51268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f7520f515b8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f7520f51740"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7520f518c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f75201ae870" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f75201ae870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f75201aebc0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f75201aed48"/>
        <function-ref name="start" scoped="" ref="0x7f75201ad020"/>
        <function-ref name="stop" scoped="" ref="0x7f75201ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f75201ad430" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f75201ad430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75201ad780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7f75201ab450" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f75201ab450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f75201ab7a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7f75201ab928"/>
        <function-ref name="setChannel" scoped="" ref="0x7f75201abab0"/>
        <function-ref name="done" scoped="" ref="0x7f75201abc38"/>
        <function-ref name="standby" scoped="" ref="0x7f75201abdc0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f75201aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f75201ada08" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f75201ada08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75201add58"/>
        <function-ref name="cancel" scoped="" ref="0x7f75201ac020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75201ac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f75201a74f0" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f75201a74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f75201a7840"/>
        <function-ref name="runTask" scoped="" ref="0x7f75201a79c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f75201a8578" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f75201a8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75201a88c8"/>
        <function-ref name="header" scoped="" ref="0x7f75201a8a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7f75201a7c90" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7f75201a7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f75201a6020"/>
        <function-ref name="runTask" scoped="" ref="0x7f75201a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f75201ac430" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f75201ac430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75201ac780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7f75201a8d18" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7f75201a8d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f75201a70a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f75201a7228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f75201aac98" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f75201aac98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75201a8020"/>
        <function-ref name="ready" scoped="" ref="0x7f75201a81a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75201a8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7f75201ac9c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7f75201ac9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7f75201acd18"/>
        <function-ref name="setChannel" scoped="" ref="0x7f75201ab020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f75201ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f75201aa268" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f75201aa268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f75201aa5b8"/>
        <function-ref name="suspend" scoped="" ref="0x7f75201aa740"/>
        <function-ref name="resume" scoped="" ref="0x7f75201aa8c8"/>
        <function-ref name="run" scoped="" ref="0x7f75201aaa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7520efb7e0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f7520efb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520efbb30"/>
        <function-ref name="ready" scoped="" ref="0x7f7520efbcb8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520efbe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7520efa120" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f7520efa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520efa470"/>
        <function-ref name="header" scoped="" ref="0x7f7520efa5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f7520efa840" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f7520efa840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7520efab90"/>
        <function-ref name="wait" scoped="" ref="0x7f7520efad18"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520ef9020"/>
        <function-ref name="isFree" scoped="" ref="0x7f7520ef91a8"/>
        <function-ref name="getNow" scoped="" ref="0x7f7520ef9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f7520ef95b8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f7520ef95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f7520ef9908"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f7520ef9a90"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f7520ef9c18"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f7520ef9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f7520efb020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f7520efb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520efb370"/>
        <function-ref name="header" scoped="" ref="0x7f7520efb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f7520efc640" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f7520efc640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520efc990"/>
        <function-ref name="ready" scoped="" ref="0x7f7520efcb18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520efcca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7520170d38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f7520170d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f752016f0d8"/>
        <function-ref name="ready" scoped="" ref="0x7f752016f260"/>
        <function-ref name="sendDone" scoped="" ref="0x7f752016f3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f752016f670" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f752016f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f752016f9c0"/>
        <function-ref name="header" scoped="" ref="0x7f752016fb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f752016fd90" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f752016fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f752016d170"/>
        <function-ref name="wait" scoped="" ref="0x7f752016d2f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f752016d480"/>
        <function-ref name="isFree" scoped="" ref="0x7f752016d608"/>
        <function-ref name="getNow" scoped="" ref="0x7f752016d790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f752016d9d8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f752016d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f752016dd28"/>
        <function-ref name="rand32" scoped="" ref="0x7f752016c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f752016c2a8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f752016c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7f752016c5f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7f752016c780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7f752016c908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7f752016ca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f7520170578" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f7520170578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75201708c8"/>
        <function-ref name="header" scoped="" ref="0x7f7520170a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f7520172b58" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f7520172b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520170020"/>
        <function-ref name="ready" scoped="" ref="0x7f75201701a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520170330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7f752016cd58" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7f752016cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f752016b0d8"/>
        <function-ref name="runTask" scoped="" ref="0x7f752016b260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f7520f11b98" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f7520f11b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f7520f10020"/>
        <function-ref name="rand32" scoped="" ref="0x7f7520f101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f7520f0eb10" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f7520f0eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520f116f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7520f15e10" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7520f15e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520f121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f7520f0aa08" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f7520f0aa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f7520f0ad58"/>
        <function-ref name="rand32" scoped="" ref="0x7f7520f09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f7520f0b9f0" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f7520f0b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520f0a560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7520f0b198" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7520f0b198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520f0b4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7520eca7b8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f7520eca7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520ecab08"/>
        <function-ref name="ready" scoped="" ref="0x7f7520ecac90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520ecae18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7520ec9120" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f7520ec9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520ec9470"/>
        <function-ref name="header" scoped="" ref="0x7f7520ec95f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f7520ec9840" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f7520ec9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7520ec9b90"/>
        <function-ref name="wait" scoped="" ref="0x7f7520ec9d18"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520ec8020"/>
        <function-ref name="isFree" scoped="" ref="0x7f7520ec81a8"/>
        <function-ref name="getNow" scoped="" ref="0x7f7520ec8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7f7520ec6740" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7f7520ec6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520ec6a90"/>
        <function-ref name="get" scoped="" ref="0x7f7520ec6c18"/>
        <function-ref name="setValue" scoped="" ref="0x7f7520ec6da0"/>
        <function-ref name="set" scoped="" ref="0x7f7520ec5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f7520ec85b8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f7520ec85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7f7520ec8908"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7f7520ec8a90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7f7520ec8c18"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7f7520ec8da0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7f7520ec6020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7f7520ec61a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7f7520ec6330"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7f7520ec64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f7520ef4718" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f7520ef4718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520ef4a68"/>
        <function-ref name="header" scoped="" ref="0x7f7520ef4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f7520ef5e38" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f7520ef5e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520ef41c0"/>
        <function-ref name="ready" scoped="" ref="0x7f7520ef4348"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520ef44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f7520ef4e38" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f7520ef4e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f7520eca1c0"/>
        <function-ref name="noAck" scoped="" ref="0x7f7520eca348"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f7520eca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f7520eae338" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f7520eae338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f7520eae688"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7520eae810"/>
        <function-ref name="start" scoped="" ref="0x7f7520eae998"/>
        <function-ref name="stop" scoped="" ref="0x7f7520eaeb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f7520eabb10" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f7520eabb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f7520eabe60"/>
        <function-ref name="request" scoped="" ref="0x7f7520ea9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7520ea5020" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f7520ea5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520ea5370"/>
        <function-ref name="ready" scoped="" ref="0x7f7520ea54f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520ea5680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7520ea5908" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f7520ea5908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520ea5c58"/>
        <function-ref name="header" scoped="" ref="0x7f7520ea5de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f7520eadbe0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f7520eadbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f7520eac020"/>
        <function-ref name="turnOn" scoped="" ref="0x7f7520eac1a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f7520eac330"/>
        <function-ref name="done" scoped="" ref="0x7f7520eac4b8"/>
        <function-ref name="standby" scoped="" ref="0x7f7520eac640"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7520eac7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f7520ea9268" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f7520ea9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520ea95b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520ea9740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520ea98c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520ea9a50"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520ea9bd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520ea9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f7520ea6020" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f7520ea6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f7520ea6470"/>
        <function-ref name="turnOn" scoped="" ref="0x7f7520ea65f8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f7520ea6780"/>
        <function-ref name="done" scoped="" ref="0x7f7520ea6908"/>
        <function-ref name="standby" scoped="" ref="0x7f7520ea6a90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7520ea6c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f7520ea8020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f7520ea8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f7520ea8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f7520eab3f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f7520eab3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520eab740"/>
        <function-ref name="header" scoped="" ref="0x7f7520eab8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f7520ea7a08" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f7520ea7a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520ea7d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f7520ea8658" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f7520ea8658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f7520ea89a8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7520ea8b30"/>
        <function-ref name="start" scoped="" ref="0x7f7520ea8cb8"/>
        <function-ref name="stop" scoped="" ref="0x7f7520ea8e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f7520ea4800" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f7520ea4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520ea4b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520ea4cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520ea4e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520ea3020"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520ea31a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520ea3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f7520ead648" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f7520ead648"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520ead998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f7520ea35b8" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f7520ea35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f7520ea3908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f7520ea7120" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f7520ea7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520ea7470"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520ea75f8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520ea7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f7520eaca10" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f7520eaca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520eacd60"/>
        <function-ref name="ready" scoped="" ref="0x7f7520eab020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520eab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f7520ea40a0" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f7520ea40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f7520ea43f0"/>
        <function-ref name="request" scoped="" ref="0x7f7520ea4578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f7520eaed68" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f7520eaed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520ead0f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520ead278"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520ead400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f7520c8b8c8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f7520c8b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c8bc18"/>
        <function-ref name="get" scoped="" ref="0x7f7520c8bda0"/>
        <function-ref name="setValue" scoped="" ref="0x7f7520c8a020"/>
        <function-ref name="set" scoped="" ref="0x7f7520c8a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f7520c8e9f8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c8e9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c8ed48"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520c8d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520c8d1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520c8d330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520c8d4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520c8d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f7520c8c9f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f7520c8c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c8cd40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520c8b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520c8b1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520c8b330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520c8b4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520c8b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f7520c91020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f7520c91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7520c90478"/>
        <function-ref name="clear" scoped="" ref="0x7f7520c90b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f7520c91d70"/>
        <function-ref name="set" scoped="" ref="0x7f7520c8e278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f7520c8da30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f7520c8da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7520c8c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f7520c95270" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7520c95270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7520c94700"/>
        <function-ref name="clear" scoped="" ref="0x7f7520c94de0"/>
        <function-ref name="isValid" scoped="" ref="0x7f7520c94020"/>
        <function-ref name="set" scoped="" ref="0x7f7520c924f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7f752011ee60" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7f752011ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f752011c1e8"/>
        <function-ref name="get" scoped="" ref="0x7f752011c370"/>
        <function-ref name="setValue" scoped="" ref="0x7f752011c4f8"/>
        <function-ref name="set" scoped="" ref="0x7f752011c680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f752011e080" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f752011e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f752011e3d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f752011e558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f752011e6e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f752011e868"/>
        <function-ref name="headerLength" scoped="" ref="0x7f752011e9f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f752011eb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f752011aac0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f752011aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f752011ae10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520119020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75201191a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520119330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f75201194b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520119640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7f7520121660" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7f7520121660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7520120ad0"/>
        <function-ref name="clear" scoped="" ref="0x7f752011f1f0"/>
        <function-ref name="isValid" scoped="" ref="0x7f75201203f0"/>
        <function-ref name="set" scoped="" ref="0x7f752011f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7f752011ca10" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f752011ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f752011b5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f752011baf8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f752011baf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f752011a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f7520125958" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f7520125958"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7520124e10"/>
        <function-ref name="clear" scoped="" ref="0x7f7520123558"/>
        <function-ref name="isValid" scoped="" ref="0x7f7520124730"/>
        <function-ref name="set" scoped="" ref="0x7f7520123c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f7520e51a28" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f7520e51a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7520e4e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f7520e3fa98" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f7520e3fa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7520e3dd60"/>
        <function-ref name="fired" scoped="" ref="0x7f7520e49470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7520e3d1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7520e49d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f7520e3c648"/>
        <function-ref name="gett0" scoped="" ref="0x7f7520e3c1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7520e498c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7520e4a620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7520e3d790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7520e4aac0"/>
        <function-ref name="stop" scoped="" ref="0x7f7520e49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f7520e3cc08" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f7520e3cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7520e3a820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7520e4b3e0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7520e4b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520e4b730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f7520e2de40" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f7520e2de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7520e31be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7520e30548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7520e300c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f7520e309d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7520e36310" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7520e36310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520e36660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f7520e36c88" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f7520e36c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7520e32410"/>
        <function-ref name="fired" scoped="" ref="0x7f7520e344a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f7520e34db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7520e34930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7520e32898"/>
        <function-ref name="start" scoped="" ref="0x7f7520e35a28"/>
        <function-ref name="stop" scoped="" ref="0x7f7520e34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f7520d378f0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f7520d378f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7520d33020"/>
        <function-ref name="fired" scoped="" ref="0x7f7520d34020"/>
        <function-ref name="startAt" scoped="" ref="0x7f7520d34930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7520d344a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7520d334a8"/>
        <function-ref name="start" scoped="" ref="0x7f7520d36698"/>
        <function-ref name="stop" scoped="" ref="0x7f7520d36b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7520d37148" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7520d37148"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f75217ef388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f75217ef388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520d37498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f7520d33a90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f7520d33a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7520d32828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7520d31190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7520d32cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f7520d31618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f75200eee70" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f75200eee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f75200ed1e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f75200ed370"/>
        <function-ref name="getControlA" scoped="" ref="0x7f75200ed4f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f75200ed680"/>
        <function-ref name="setControlB" scoped="" ref="0x7f75200ed808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f75200ed990"/>
        <function-ref name="getControlB" scoped="" ref="0x7f75200edb18"/>
        <function-ref name="setControlA" scoped="" ref="0x7f75200edca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f75200f9b40" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f75200f9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f75200f6238"/>
        <function-ref name="fired" scoped="" ref="0x7f75200f72b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f75200f7bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f75200f7738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f75200f66c0"/>
        <function-ref name="start" scoped="" ref="0x7f75200f88f8"/>
        <function-ref name="stop" scoped="" ref="0x7f75200f8dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f75200f9398" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f75200f9398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75200f96e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f75200f6ca8" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f75200f6ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f75200f4a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f75200f34a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f75200f3020"/>
        <function-ref name="overflow" scoped="" ref="0x7f75200f3930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f75200e8200" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f75200e8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f75200e8550"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f75200e86d8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f75200e8860"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f75200e89e8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f75200e8b70"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f75200e8cf8"/>
        <function-ref name="getAssr" scoped="" ref="0x7f75200e8e80"/>
        <function-ref name="setAssr" scoped="" ref="0x7f75200e7030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f75200ec060" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f75200ec060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f75200e9930"/>
        <function-ref name="fired" scoped="" ref="0x7f75200eb598"/>
        <function-ref name="get" scoped="" ref="0x7f75200ecbe0"/>
        <function-ref name="reset" scoped="" ref="0x7f75200eba20"/>
        <function-ref name="isOn" scoped="" ref="0x7f75200e9db8"/>
        <function-ref name="set" scoped="" ref="0x7f75200eb0c0"/>
        <function-ref name="start" scoped="" ref="0x7f75200e9020"/>
        <function-ref name="stop" scoped="" ref="0x7f75200e94a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f75200f2020" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f75200f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f75200ee0f8"/>
        <function-ref name="test" scoped="" ref="0x7f75200f07a8"/>
        <function-ref name="get" scoped="" ref="0x7f75200f2ba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f75200ee580"/>
        <function-ref name="getScale" scoped="" ref="0x7f75200eea58"/>
        <function-ref name="reset" scoped="" ref="0x7f75200f19e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f75200f1560"/>
        <function-ref name="isOn" scoped="" ref="0x7f75200f0c30"/>
        <function-ref name="set" scoped="" ref="0x7f75200f1088"/>
        <function-ref name="start" scoped="" ref="0x7f75200f1e70"/>
        <function-ref name="stop" scoped="" ref="0x7f75200f0320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f7520da5a98" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f7520da5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f7520da5de8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f7520da4020"/>
        <function-ref name="getControlA" scoped="" ref="0x7f7520da41a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f7520da4330"/>
        <function-ref name="setControlB" scoped="" ref="0x7f7520da44b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f7520da4640"/>
        <function-ref name="getControlB" scoped="" ref="0x7f7520da47c8"/>
        <function-ref name="setControlA" scoped="" ref="0x7f7520da4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f7520d9f228" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f7520d9f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f7520d9f578"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f7520d9f700"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f7520d9f888"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f7520d9fa10"/>
        <function-ref name="countBusy" scoped="" ref="0x7f7520d9fb98"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f7520d9fd20"/>
        <function-ref name="getAssr" scoped="" ref="0x7f7520d9e020"/>
        <function-ref name="setAssr" scoped="" ref="0x7f7520d9e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f7520da4e18" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f7520da4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f7520da1798"/>
        <function-ref name="fired" scoped="" ref="0x7f7520da24f8"/>
        <function-ref name="get" scoped="" ref="0x7f7520da3a18"/>
        <function-ref name="reset" scoped="" ref="0x7f7520da2980"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520da1c20"/>
        <function-ref name="set" scoped="" ref="0x7f7520da2020"/>
        <function-ref name="start" scoped="" ref="0x7f7520da2e08"/>
        <function-ref name="stop" scoped="" ref="0x7f7520da1310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7520daca08" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7520daca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f7520da7b80"/>
        <function-ref name="test" scoped="" ref="0x7f7520da7270"/>
        <function-ref name="get" scoped="" ref="0x7f7520da95b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f7520da5088"/>
        <function-ref name="getScale" scoped="" ref="0x7f7520da5560"/>
        <function-ref name="reset" scoped="" ref="0x7f7520da84a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f7520da8020"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520da76f8"/>
        <function-ref name="set" scoped="" ref="0x7f7520da9a38"/>
        <function-ref name="start" scoped="" ref="0x7f7520da8930"/>
        <function-ref name="stop" scoped="" ref="0x7f7520da8db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f7520d965c0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f7520d965c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f7520d96910"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f7520d96a98"/>
        <function-ref name="getControlA" scoped="" ref="0x7f7520d96c20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f7520d96da8"/>
        <function-ref name="setControlB" scoped="" ref="0x7f7520d95020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f7520d951a8"/>
        <function-ref name="getControlB" scoped="" ref="0x7f7520d95330"/>
        <function-ref name="setControlA" scoped="" ref="0x7f7520d954b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f7520d91b78" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f7520d91b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f7520d90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f7520d903d0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f7520d903d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7f7520d90720"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7f7520d908a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f7520d90a30"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f7520d90bb8"/>
        <function-ref name="countBusy" scoped="" ref="0x7f7520d90d40"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f7520d8f020"/>
        <function-ref name="getAssr" scoped="" ref="0x7f7520d8f1a8"/>
        <function-ref name="setAssr" scoped="" ref="0x7f7520d8f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f7520d95980" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f7520d95980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f7520d91270"/>
        <function-ref name="fired" scoped="" ref="0x7f7520d93020"/>
        <function-ref name="get" scoped="" ref="0x7f7520d94560"/>
        <function-ref name="reset" scoped="" ref="0x7f7520d934a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520d916f8"/>
        <function-ref name="set" scoped="" ref="0x7f7520d949e8"/>
        <function-ref name="start" scoped="" ref="0x7f7520d93930"/>
        <function-ref name="stop" scoped="" ref="0x7f7520d93db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7520d9b5d0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7520d9b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f7520d976f8"/>
        <function-ref name="test" scoped="" ref="0x7f7520d99db8"/>
        <function-ref name="get" scoped="" ref="0x7f7520d9a190"/>
        <function-ref name="setScale" scoped="" ref="0x7f7520d97b80"/>
        <function-ref name="getScale" scoped="" ref="0x7f7520d96088"/>
        <function-ref name="reset" scoped="" ref="0x7f7520d99020"/>
        <function-ref name="overflow" scoped="" ref="0x7f7520d9aaf0"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520d97270"/>
        <function-ref name="set" scoped="" ref="0x7f7520d9a618"/>
        <function-ref name="start" scoped="" ref="0x7f7520d994a8"/>
        <function-ref name="stop" scoped="" ref="0x7f7520d99930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f7520d01cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f7520d01cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7520d000a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f7520d00228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f7520d05c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f7520d05c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7520d01410"/>
        <function-ref name="fired" scoped="" ref="0x7f7520d024a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f7520d02db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7520d02930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7520d01898"/>
        <function-ref name="start" scoped="" ref="0x7f7520d049f0"/>
        <function-ref name="stop" scoped="" ref="0x7f7520d02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7520d0aab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7520d0aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7520d06d60"/>
        <function-ref name="fired" scoped="" ref="0x7f7520d08470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7520d061c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7520d08d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f7520d05648"/>
        <function-ref name="gett0" scoped="" ref="0x7f7520d051f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7520d088c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7520d09620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7520d06790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7520d09ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f7520d08020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f7520cb3930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f7520cb3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7520cb3c80"/>
        <function-ref name="runTask" scoped="" ref="0x7f7520cb3e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f7520cb8858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f7520cb8858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7520cb4bc0"/>
        <function-ref name="fired" scoped="" ref="0x7f7520cb51c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7520cb4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7520cb5a60"/>
        <function-ref name="getdt" scoped="" ref="0x7f7520cb34d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f7520cb3088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7520cb5610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7520cb73d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7520cb45f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7520cb7878"/>
        <function-ref name="stop" scoped="" ref="0x7f7520cb7d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7520cbe5e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7520cbe5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7520cba988"/>
        <function-ref name="fired" scoped="" ref="0x7f7520cbb020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7520cbbd70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7520cbb900"/>
        <function-ref name="getdt" scoped="" ref="0x7f7520cb82d8"/>
        <function-ref name="gett0" scoped="" ref="0x7f7520cbadf8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7520cbb490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7520cbd198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7520cba398"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7520cbd658"/>
        <function-ref name="stop" scoped="" ref="0x7f7520cbdb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f7520cae128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f7520cae128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7520caeca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f7520ca5330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f7520ca5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7520ca40c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7520ca49d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f7520ca4548"/>
        <function-ref name="overflow" scoped="" ref="0x7f7520ca4e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f7520c9d1c8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f7520c9d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521765020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f7521765378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7520c995f0"/>
        <function-ref name="fired" scoped="" ref="0x7f7520c9caf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f7520c9a8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f7520c9a470"/>
        <function-ref name="getdt" scoped="" ref="0x7f7520c98020"/>
        <function-ref name="gett0" scoped="" ref="0x7f7520c99a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7520c9a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f7520c9dd10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f7520c99020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f7520c9c200"/>
        <function-ref name="stop" scoped="" ref="0x7f7520c9c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f7520c660e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c660e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c66430"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520c665b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520c66740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520c668c8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520c66a50"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520c66bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f7520c65020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f7520c65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c65370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520c654f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520c65680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520c65808"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520c65990"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520c65b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7f7520c85660" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7f7520c85660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c859d0"/>
        <function-ref name="get" scoped="" ref="0x7f7520c85b58"/>
        <function-ref name="setValue" scoped="" ref="0x7f7520c85ce0"/>
        <function-ref name="set" scoped="" ref="0x7f7520c85e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f7520c63b78" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f7520c63b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f7520c62020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7520c621a8"/>
        <function-ref name="start" scoped="" ref="0x7f7520c62330"/>
        <function-ref name="stop" scoped="" ref="0x7f7520c624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f7520c5f3f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f7520c5f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f7520c5f740"/>
        <function-ref name="request" scoped="" ref="0x7f7520c5f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f7520c5a8c8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f7520c5a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520c5ac18"/>
        <function-ref name="ready" scoped="" ref="0x7f7520c5ada0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520c59020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f7520c592a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f7520c592a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520c595f8"/>
        <function-ref name="header" scoped="" ref="0x7f7520c59780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f7520c615b8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f7520c615b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f7520c61908"/>
        <function-ref name="turnOn" scoped="" ref="0x7f7520c61a90"/>
        <function-ref name="setChannel" scoped="" ref="0x7f7520c61c18"/>
        <function-ref name="done" scoped="" ref="0x7f7520c61da0"/>
        <function-ref name="standby" scoped="" ref="0x7f7520c60020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7520c601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f7520c5fb10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c5fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c5fe60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520c5d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520c5d1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520c5d330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520c5d4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520c5d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7f7520c5ba08" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7f7520c5ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f7520c5be58"/>
        <function-ref name="turnOn" scoped="" ref="0x7f7520c5a020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f7520c5a1a8"/>
        <function-ref name="done" scoped="" ref="0x7f7520c5a330"/>
        <function-ref name="standby" scoped="" ref="0x7f7520c5a4b8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7520c5a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7f7520c5d8c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7f7520c5d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f7520c5dc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f7520c60c98" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f7520c60c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520c5f020"/>
        <function-ref name="header" scoped="" ref="0x7f7520c5f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7f7520c5b430" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7f7520c5b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520c5b780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f7520c5c020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f7520c5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f7520c5c370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f7520c5c4f8"/>
        <function-ref name="start" scoped="" ref="0x7f7520c5c680"/>
        <function-ref name="stop" scoped="" ref="0x7f7520c5c808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f7520c582a8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f7520c582a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c585f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520c58780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520c58908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520c58a90"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520c58c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520c58da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f7520c61020" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f7520c61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520c61370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f7520c57060" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f7520c57060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7f7520c573b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7f7520c5ca90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7f7520c5ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520c5cde0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520c5b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520c5b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f7520c603f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f7520c603f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520c60740"/>
        <function-ref name="ready" scoped="" ref="0x7f7520c608c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520c60a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7f7520c59a08" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7f7520c59a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f7520c59d58"/>
        <function-ref name="request" scoped="" ref="0x7f7520c58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f7520c62700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f7520c62700"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520c62a50"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520c62bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520c62d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f7520c4e448" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f7520c4e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f7520c4e798"/>
        <function-ref name="request" scoped="" ref="0x7f7520c4e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f7520c490c8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f7520c490c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c486a0"/>
        <function-ref name="get" scoped="" ref="0x7f7520c48190"/>
        <function-ref name="isSet" scoped="" ref="0x7f7520c49c48"/>
        <function-ref name="set" scoped="" ref="0x7f7520c48bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f7520c34020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f7520c34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c34370"/>
        <function-ref name="get" scoped="" ref="0x7f7520c344f8"/>
        <function-ref name="setValue" scoped="" ref="0x7f7520c34680"/>
        <function-ref name="set" scoped="" ref="0x7f7520c34808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f7520c39730" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f7520c39730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7520c38c58"/>
        <function-ref name="clear" scoped="" ref="0x7f7520c37380"/>
        <function-ref name="isValid" scoped="" ref="0x7f7520c38578"/>
        <function-ref name="set" scoped="" ref="0x7f7520c37a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f7520c533e0" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f7520c533e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f7520c53730"/>
        <function-ref name="turnOn" scoped="" ref="0x7f7520c538b8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f7520c53a40"/>
        <function-ref name="done" scoped="" ref="0x7f7520c53bc8"/>
        <function-ref name="standby" scoped="" ref="0x7f7520c53d50"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7520c50020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f7520c33768" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f7520c33768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7520c33ab8"/>
        <function-ref name="wait" scoped="" ref="0x7f7520c33c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520c33dc8"/>
        <function-ref name="isFree" scoped="" ref="0x7f7520c32020"/>
        <function-ref name="getNow" scoped="" ref="0x7f7520c321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f7520c4dcd0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f7520c4dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c4b388"/>
        <function-ref name="get" scoped="" ref="0x7f7520c4ce00"/>
        <function-ref name="isSet" scoped="" ref="0x7f7520c4c8f0"/>
        <function-ref name="set" scoped="" ref="0x7f7520c4b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f7520c4ebd8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c4ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c4d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520c4d1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520c4d330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520c4d4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520c4d640"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520c4d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f7520c3b5c8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f7520c3b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520c3ba18"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520c3bba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520c3bd28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f7520c39020"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f7520c391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f7520c50bf0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f7520c50bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520c4e020"/>
        <function-ref name="header" scoped="" ref="0x7f7520c4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f7520c3e4b8" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f7520c3e4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f752169a540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7520c3cb18"/>
        <function-ref name="fired" scoped="" ref="0x7f7520c3db90"/>
        <function-ref name="startAt" scoped="" ref="0x7f7520c3c510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7520c3c088"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7520c3b020"/>
        <function-ref name="start" scoped="" ref="0x7f7520c3d230"/>
        <function-ref name="stop" scoped="" ref="0x7f7520c3d708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f7520c47458" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f7520c47458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c45a40"/>
        <function-ref name="get" scoped="" ref="0x7f7520c45530"/>
        <function-ref name="isSet" scoped="" ref="0x7f7520c45020"/>
        <function-ref name="set" scoped="" ref="0x7f7520c44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f7520c40220" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f7520c40220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7520c40da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f7520c502c8" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f7520c502c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520c50618"/>
        <function-ref name="ready" scoped="" ref="0x7f7520c507a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520c50928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f7520c44860" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f7520c44860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c43e30"/>
        <function-ref name="get" scoped="" ref="0x7f7520c43920"/>
        <function-ref name="isSet" scoped="" ref="0x7f7520c43410"/>
        <function-ref name="set" scoped="" ref="0x7f7520c41388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f7520c34b78" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f7520c34b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c33020"/>
        <function-ref name="get" scoped="" ref="0x7f7520c331a8"/>
        <function-ref name="setValue" scoped="" ref="0x7f7520c33330"/>
        <function-ref name="set" scoped="" ref="0x7f7520c334b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f7520c35378" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f7520c35378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c356c8"/>
        <function-ref name="get" scoped="" ref="0x7f7520c35850"/>
        <function-ref name="setValue" scoped="" ref="0x7f7520c359d8"/>
        <function-ref name="set" scoped="" ref="0x7f7520c35b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f7520c419d0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f7520c419d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f7520c41d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7f7520c292c0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7f7520c292c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7f7520c29610"/>
        <function-ref name="request" scoped="" ref="0x7f7520c29798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f7520c0ac60" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f7520c0ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7521763788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f7520c0f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7f7520c24020" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7f7520c24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c23608"/>
        <function-ref name="get" scoped="" ref="0x7f7520c230f8"/>
        <function-ref name="isSet" scoped="" ref="0x7f7520c24ba0"/>
        <function-ref name="set" scoped="" ref="0x7f7520c23b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7f7520c07988" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7f7520c07988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c07cd8"/>
        <function-ref name="get" scoped="" ref="0x7f7520c07e60"/>
        <function-ref name="setValue" scoped="" ref="0x7f7520c06020"/>
        <function-ref name="set" scoped="" ref="0x7f7520c061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7f7520c2dbf0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f7520c2dbf0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f75217ef6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f75217ef6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520c2b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f7520c052b0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f7520c052b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f7520c04910"/>
        <function-ref name="clear" scoped="" ref="0x7f7520c02020"/>
        <function-ref name="isValid" scoped="" ref="0x7f7520c04230"/>
        <function-ref name="set" scoped="" ref="0x7f7520c02700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f7520c17e70" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f7520c17e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520c161e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520c16370"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520c164f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520c16680"/>
        <function-ref name="get" scoped="" ref="0x7f7520c16808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520c16990"/>
        <function-ref name="set" scoped="" ref="0x7f7520c16b18"/>
        <function-ref name="clr" scoped="" ref="0x7f7520c16ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7f7520c01ab8" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7f7520c01ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f7520c01e08"/>
        <function-ref name="wait" scoped="" ref="0x7f7520c00020"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520c001a8"/>
        <function-ref name="isFree" scoped="" ref="0x7f7520c00330"/>
        <function-ref name="getNow" scoped="" ref="0x7f7520c004b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7f7520c2b2d0" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7f7520c2b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7f7520c2b620"/>
        <function-ref name="turnOn" scoped="" ref="0x7f7520c2b7a8"/>
        <function-ref name="setChannel" scoped="" ref="0x7f7520c2b930"/>
        <function-ref name="done" scoped="" ref="0x7f7520c2bab8"/>
        <function-ref name="standby" scoped="" ref="0x7f7520c2bc40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7520c2bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f7520c09020" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f7520c09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7520c09ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7f7520c28b48" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7f7520c28b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c26190"/>
        <function-ref name="get" scoped="" ref="0x7f7520c27c38"/>
        <function-ref name="isSet" scoped="" ref="0x7f7520c27728"/>
        <function-ref name="set" scoped="" ref="0x7f7520c266a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7f7520c29a50" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7f7520c29a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c29da0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520c28020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520c281a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520c28330"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520c284b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520c28640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7f7520c13d00" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f7520c13d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520c170a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520c17228"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520c173b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520c17538"/>
        <function-ref name="get" scoped="" ref="0x7f7520c176c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520c17848"/>
        <function-ref name="set" scoped="" ref="0x7f7520c179d0"/>
        <function-ref name="clr" scoped="" ref="0x7f7520c17b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f7520c08100" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7f7520c08100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520c08450"/>
        <function-ref name="headerLength" scoped="" ref="0x7f7520c085d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x7f7520c08760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7f7520c088e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7f7520c08a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7f7520c2a9e8" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7f7520c2a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f7520c2ad38"/>
        <function-ref name="header" scoped="" ref="0x7f7520c29020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7f7520b75d98" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7f7520b75d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7520b74170"/>
        <function-ref name="runTask" scoped="" ref="0x7f7520b742f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f7520c213b0" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f7520c213b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c20a40"/>
        <function-ref name="get" scoped="" ref="0x7f7520c20530"/>
        <function-ref name="isSet" scoped="" ref="0x7f7520c20020"/>
        <function-ref name="set" scoped="" ref="0x7f7520c1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f7520c2d138" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f7520c2d138"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f75217ef6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f75217ef6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520c2d488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f7520c1a4f8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f7520c1a4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7520c1a848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7520c1a9d0"/>
        <function-ref name="request" scoped="" ref="0x7f7520c1ab58"/>
        <function-ref name="granted" scoped="" ref="0x7f7520c1ace0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7520c1ae68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7f7520c1b130" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f7520c1b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520c1b580"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520c1b708"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520c1b890"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520c1ba18"/>
        <function-ref name="get" scoped="" ref="0x7f7520c1bba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520c1bd28"/>
        <function-ref name="set" scoped="" ref="0x7f7520c1a020"/>
        <function-ref name="clr" scoped="" ref="0x7f7520c1a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7f7520c1f860" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7f7520c1f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c1de30"/>
        <function-ref name="get" scoped="" ref="0x7f7520c1d920"/>
        <function-ref name="isSet" scoped="" ref="0x7f7520c1d410"/>
        <function-ref name="set" scoped="" ref="0x7f7520c1c388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7f7520c2a0c0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7f7520c2a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520c2a410"/>
        <function-ref name="ready" scoped="" ref="0x7f7520c2a598"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520c2a720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7f7520c0c5e8" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f7520c0c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f7520c0c938"/>
        <function-ref name="disable" scoped="" ref="0x7f7520c0cac0"/>
        <function-ref name="captured" scoped="" ref="0x7f7520c0cc48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f7520c0cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7f7520c131f0" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f7520c131f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f7520c13540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f7520c136c8"/>
        <function-ref name="splitRead" scoped="" ref="0x7f7520c13850"/>
        <function-ref name="write" scoped="" ref="0x7f7520c139d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7f7520c06518" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7f7520c06518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c06868"/>
        <function-ref name="get" scoped="" ref="0x7f7520c069f0"/>
        <function-ref name="setValue" scoped="" ref="0x7f7520c06b78"/>
        <function-ref name="set" scoped="" ref="0x7f7520c06d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7f7520c08e10" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7f7520c08e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520c071a8"/>
        <function-ref name="get" scoped="" ref="0x7f7520c07330"/>
        <function-ref name="setValue" scoped="" ref="0x7f7520c074b8"/>
        <function-ref name="set" scoped="" ref="0x7f7520c07640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f7520c1c9d0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f7520c1c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f7520c1cd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7f7520c01020" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7f7520c01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7f7520c01370"/>
        <function-ref name="suspend" scoped="" ref="0x7f7520c014f8"/>
        <function-ref name="resume" scoped="" ref="0x7f7520c01680"/>
        <function-ref name="run" scoped="" ref="0x7f7520c01808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f7520b31338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f7520b31338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520b31688"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520b31810"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520b31998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520b31b20"/>
        <function-ref name="get" scoped="" ref="0x7f7520b31ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520b31e30"/>
        <function-ref name="set" scoped="" ref="0x7f7520b30020"/>
        <function-ref name="clr" scoped="" ref="0x7f7520b301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7f7520b32140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7f7520b32140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520b32490"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520b32618"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520b327a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520b32928"/>
        <function-ref name="get" scoped="" ref="0x7f7520b32ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520b32c38"/>
        <function-ref name="set" scoped="" ref="0x7f7520b32dc0"/>
        <function-ref name="clr" scoped="" ref="0x7f7520b31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f7520b2f2e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f7520b2f2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7520b2d928"/>
        <function-ref name="fired" scoped="" ref="0x7f7520b2e9e8"/>
        <function-ref name="startAt" scoped="" ref="0x7f7520b2d320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7520b2ee70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f7520b2ddb0"/>
        <function-ref name="start" scoped="" ref="0x7f7520b2e088"/>
        <function-ref name="stop" scoped="" ref="0x7f7520b2e560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7f7520b35990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f7520b35990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7520b35ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7520b35e68"/>
        <function-ref name="request" scoped="" ref="0x7f7520b33020"/>
        <function-ref name="granted" scoped="" ref="0x7f7520b331a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7520b33330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7f7520b38710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7f7520b38710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520b38a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520b38be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520b38d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520b35020"/>
        <function-ref name="get" scoped="" ref="0x7f7520b351a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520b35330"/>
        <function-ref name="set" scoped="" ref="0x7f7520b354b8"/>
        <function-ref name="clr" scoped="" ref="0x7f7520b35640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f7520b304c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f7520b304c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f7520b30810"/>
        <function-ref name="disable" scoped="" ref="0x7f7520b30998"/>
        <function-ref name="captured" scoped="" ref="0x7f7520b30b20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f7520b30ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f7520b335e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f7520b335e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f7520b33938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f7520b33ac0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f7520b33c48"/>
        <function-ref name="write" scoped="" ref="0x7f7520b33dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7f7520b2b438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7f7520b2b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TRadio" ref="0x7f752169a140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7520b2a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7f7520b1cc18" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7f7520b1cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520b1b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520b1b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520b1b330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520b1b4b8"/>
        <function-ref name="get" scoped="" ref="0x7f7520b1b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520b1b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f7520b1b950"/>
        <function-ref name="clr" scoped="" ref="0x7f7520b1bad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7f7520b1e540" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f7520b1e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f7520b1c6f8"/>
        <function-ref name="test" scoped="" ref="0x7f7520b1ddb8"/>
        <function-ref name="get" scoped="" ref="0x7f7520b240f8"/>
        <function-ref name="captured" scoped="" ref="0x7f7520b24a58"/>
        <function-ref name="reset" scoped="" ref="0x7f7520b1d020"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520b1c270"/>
        <function-ref name="set" scoped="" ref="0x7f7520b24580"/>
        <function-ref name="start" scoped="" ref="0x7f7520b1d4a8"/>
        <function-ref name="stop" scoped="" ref="0x7f7520b1d930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7f7520b1be08" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7f7520b1be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520b191a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520b19330"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520b194b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520b19640"/>
        <function-ref name="get" scoped="" ref="0x7f7520b197c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520b19950"/>
        <function-ref name="set" scoped="" ref="0x7f7520b19ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f7520b19c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f7520b27870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f7520b27870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520b27bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7f7520b2acd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7f7520b2acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f7520b270a0"/>
        <function-ref name="disable" scoped="" ref="0x7f7520b27228"/>
        <function-ref name="captured" scoped="" ref="0x7f7520b273b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f7520b27538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f7520aff1d8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f7520aff1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520aff528"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520aff6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f7520b08388" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f7520b08388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f7520b086d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7520b28cd0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7520b28cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520b0b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f7520b089d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f7520b089d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f7520b08d20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f7520b0a020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f7520b0a1a8"/>
        <function-ref name="write" scoped="" ref="0x7f7520b0a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7520affe80" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7520affe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7520b091f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7520b09380"/>
        <function-ref name="request" scoped="" ref="0x7f7520b09508"/>
        <function-ref name="granted" scoped="" ref="0x7f7520b09690"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7520b09818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f7520abdb58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f7520abdb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7520abc020"/>
        <function-ref name="runTask" scoped="" ref="0x7f7520abc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f7520afc120" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f7520afc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520afc470"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520afc5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f7520ade3c8" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f7520ade3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7520ade718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7520ade8a0"/>
        <function-ref name="request" scoped="" ref="0x7f7520adea28"/>
        <function-ref name="granted" scoped="" ref="0x7f7520adebb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7520aded38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f7520afd020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f7520afd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f7520afd370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7520b07a18" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7520b07a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520b07d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f7520adf150" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f7520adf150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f7520adf4a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f7520af8950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f7520adf7b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f7520af8ad8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f7520adfac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f7520adfc48"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f7520adfdd0"/>
        <function-ref name="read" scoped="" ref="0x7f7520af9020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f7520af91a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f7520af9330"/>
        <function-ref name="setClock" scoped="" ref="0x7f7520af94b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7520af9640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f7520af97c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f7520af9a50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f7520af9bd8"/>
        <function-ref name="write" scoped="" ref="0x7f7520af9d60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f7520af8020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f7520af81a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f7520af8330"/>
        <function-ref name="getClock" scoped="" ref="0x7f7520af84b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f7520af8640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f7520adf628"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f7520adf938"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f7520af87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f7520afd628" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f7520afd628"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f7520afd978"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f7520afdb00"/>
        <function-ref name="splitRead" scoped="" ref="0x7f7520afdc88"/>
        <function-ref name="write" scoped="" ref="0x7f7520afde10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7520afcd88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7520afcd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7520afb170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7520afb2f8"/>
        <function-ref name="request" scoped="" ref="0x7f7520afb480"/>
        <function-ref name="granted" scoped="" ref="0x7f7520afb608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7520afb790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f7520add020" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7520add020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7520add370"/>
        <function-ref name="userId" scoped="" ref="0x7f7520add4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f7520add7c8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f7520add7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f7520addb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f7520a92020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f7520a92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f7520a92370"/>
        <function-ref name="sleep" scoped="" ref="0x7f7520a907c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f7520a92680"/>
        <function-ref name="dataReady" scoped="" ref="0x7f7520a90950"/>
        <function-ref name="initMaster" scoped="" ref="0x7f7520a92990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f7520a92b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f7520a92ca0"/>
        <function-ref name="read" scoped="" ref="0x7f7520a92e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f7520a91020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f7520a911a8"/>
        <function-ref name="setClock" scoped="" ref="0x7f7520a91330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7520a914b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f7520a91640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f7520a918c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f7520a91a50"/>
        <function-ref name="write" scoped="" ref="0x7f7520a91bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f7520a91d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f7520a90020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f7520a901a8"/>
        <function-ref name="getClock" scoped="" ref="0x7f7520a90330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f7520a904b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f7520a924f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f7520a92808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f7520a90640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f7520a84190" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f7520a84190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520a844e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520a84668"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520a847f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520a84978"/>
        <function-ref name="get" scoped="" ref="0x7f7520a84b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520a84c88"/>
        <function-ref name="set" scoped="" ref="0x7f7520a84e10"/>
        <function-ref name="clr" scoped="" ref="0x7f7520a83020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f7520a89de0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f7520a89de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520a88170"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520a882f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520a88480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520a88608"/>
        <function-ref name="get" scoped="" ref="0x7f7520a88790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520a88918"/>
        <function-ref name="set" scoped="" ref="0x7f7520a88aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f7520a88c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f7520a86c70" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f7520a86c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520a89020"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520a891a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520a89330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520a894b8"/>
        <function-ref name="get" scoped="" ref="0x7f7520a89640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520a897c8"/>
        <function-ref name="set" scoped="" ref="0x7f7520a89950"/>
        <function-ref name="clr" scoped="" ref="0x7f7520a89ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f7520a86438" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f7520a86438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f7520a86788"/>
        <function-ref name="stop" scoped="" ref="0x7f7520a86910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f7520a83350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f7520a83350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f7520a836a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f7520a8fdc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f7520a8fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f7520a8c170"/>
        <function-ref name="sleep" scoped="" ref="0x7f7520a8a640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f7520a8c480"/>
        <function-ref name="dataReady" scoped="" ref="0x7f7520a8a7c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f7520a8c790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f7520a8c918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f7520a8caa0"/>
        <function-ref name="read" scoped="" ref="0x7f7520a8cc28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f7520a8cdb0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f7520a8b020"/>
        <function-ref name="setClock" scoped="" ref="0x7f7520a8b1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f7520a8b330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f7520a8b4b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f7520a8b740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f7520a8b8c8"/>
        <function-ref name="write" scoped="" ref="0x7f7520a8ba50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f7520a8bbd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f7520a8bd60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f7520a8a020"/>
        <function-ref name="getClock" scoped="" ref="0x7f7520a8a1a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f7520a8a330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f7520a8c2f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f7520a8c608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f7520a8a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f7520a85020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f7520a85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f7520a85370"/>
        <function-ref name="isInput" scoped="" ref="0x7f7520a854f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f7520a85680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f7520a85808"/>
        <function-ref name="get" scoped="" ref="0x7f7520a85990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f7520a85b18"/>
        <function-ref name="set" scoped="" ref="0x7f7520a85ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f7520a85e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f7520a3b510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f7520a3b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f7520a3b880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f7520a3ba08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f7520a39550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f7520a39550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f7520a398c0"/>
        <function-ref name="configure" scoped="" ref="0x7f7520a39a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f7520a3c748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f7520a3c748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f7520a3cab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f7520a3cc40"/>
        <function-ref name="request" scoped="" ref="0x7f7520a3cdc8"/>
        <function-ref name="granted" scoped="" ref="0x7f7520a3b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f7520a3b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f7520a3bc50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f7520a3bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f7520a39020"/>
        <function-ref name="userId" scoped="" ref="0x7f7520a391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f75200605e8" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f75200605e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f7520060938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f7520060bc0" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f7520060bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f752005f020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f752005f1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f752005f330"/>
        <function-ref name="dequeue" scoped="" ref="0x7f752005f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f752005d820" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f752005d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f752005db90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f752005dd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f752005c8c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f752005c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f752005cc30"/>
        <function-ref name="configure" scoped="" ref="0x7f752005cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f752005b0a0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f752005b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f752005b3f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f752005b578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f752005b700"/>
        <function-ref name="dequeue" scoped="" ref="0x7f752005b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f752005ea28" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f752005ea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f752005ed98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f752005d020"/>
        <function-ref name="request" scoped="" ref="0x7f752005d1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f752005d330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f752005d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f752005c020" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f752005c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f752005c370"/>
        <function-ref name="userId" scoped="" ref="0x7f752005c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f752005bb50" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f752005bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7520059020"/>
        <function-ref name="runTask" scoped="" ref="0x7f75200591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f7520a215e8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f7520a215e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f7520a21938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f7520a21ac0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f7520a21c48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f7520a21dd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f7520a29020"/>
        <function-ref name="setControlB" scoped="" ref="0x7f7520a291a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f7520a29330"/>
        <function-ref name="getControlB" scoped="" ref="0x7f7520a294b8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f7520a29640"/>
        <function-ref name="setControlA" scoped="" ref="0x7f7520a297c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f7520a29ca0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f7520a29ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f7520a1ee20"/>
        <function-ref name="test" scoped="" ref="0x7f7520a1e510"/>
        <function-ref name="get" scoped="" ref="0x7f7520a20858"/>
        <function-ref name="captured" scoped="" ref="0x7f7520a1f238"/>
        <function-ref name="reset" scoped="" ref="0x7f7520a1f710"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520a1e998"/>
        <function-ref name="set" scoped="" ref="0x7f7520a20ce0"/>
        <function-ref name="start" scoped="" ref="0x7f7520a1fb98"/>
        <function-ref name="stop" scoped="" ref="0x7f7520a1e088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f7520a1da20" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f7520a1da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f7520a19270"/>
        <function-ref name="fired" scoped="" ref="0x7f7520a1a020"/>
        <function-ref name="get" scoped="" ref="0x7f7520a1b5d8"/>
        <function-ref name="reset" scoped="" ref="0x7f7520a1a4a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520a196f8"/>
        <function-ref name="set" scoped="" ref="0x7f7520a1ba60"/>
        <function-ref name="start" scoped="" ref="0x7f7520a1a930"/>
        <function-ref name="stop" scoped="" ref="0x7f7520a1adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7520a316e0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7520a316e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f7520a2c930"/>
        <function-ref name="test" scoped="" ref="0x7f7520a2c020"/>
        <function-ref name="get" scoped="" ref="0x7f7520a2e3a8"/>
        <function-ref name="setScale" scoped="" ref="0x7f7520a2cdb8"/>
        <function-ref name="getScale" scoped="" ref="0x7f7520a2a2f0"/>
        <function-ref name="reset" scoped="" ref="0x7f7520a2d1f8"/>
        <function-ref name="overflow" scoped="" ref="0x7f7520a2ed08"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520a2c4a8"/>
        <function-ref name="set" scoped="" ref="0x7f7520a2e830"/>
        <function-ref name="start" scoped="" ref="0x7f7520a2d680"/>
        <function-ref name="stop" scoped="" ref="0x7f7520a2db08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f7520a10c90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f7520a10c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7f7520a0f020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f7520a0f1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x7f7520a0f330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f7520a0f4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f7520a0f640"/>
        <function-ref name="setControlB" scoped="" ref="0x7f7520a0f7c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f7520a0f950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f7520a0fad8"/>
        <function-ref name="setControlC" scoped="" ref="0x7f7520a0fc60"/>
        <function-ref name="setControlA" scoped="" ref="0x7f7520a0fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f7520a0ac48" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f7520a0ac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f7520a064a8"/>
        <function-ref name="fired" scoped="" ref="0x7f7520a081d0"/>
        <function-ref name="get" scoped="" ref="0x7f7520a09820"/>
        <function-ref name="reset" scoped="" ref="0x7f7520a08658"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520a06930"/>
        <function-ref name="set" scoped="" ref="0x7f7520a09ca8"/>
        <function-ref name="start" scoped="" ref="0x7f7520a08ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f7520a06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f7520a0e350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f7520a0e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f7520a0a580"/>
        <function-ref name="test" scoped="" ref="0x7f7520a0bc20"/>
        <function-ref name="get" scoped="" ref="0x7f7520a0d020"/>
        <function-ref name="captured" scoped="" ref="0x7f7520a0d980"/>
        <function-ref name="reset" scoped="" ref="0x7f7520a0de58"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520a0a0f8"/>
        <function-ref name="set" scoped="" ref="0x7f7520a0d4a8"/>
        <function-ref name="start" scoped="" ref="0x7f7520a0b310"/>
        <function-ref name="stop" scoped="" ref="0x7f7520a0b798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f7520a05020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f7520a05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f7520a027a8"/>
        <function-ref name="fired" scoped="" ref="0x7f7520a04560"/>
        <function-ref name="get" scoped="" ref="0x7f7520a05ba0"/>
        <function-ref name="reset" scoped="" ref="0x7f7520a049e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520a02c30"/>
        <function-ref name="set" scoped="" ref="0x7f7520a04088"/>
        <function-ref name="start" scoped="" ref="0x7f7520a04e70"/>
        <function-ref name="stop" scoped="" ref="0x7f7520a02320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f7520a01360" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f7520a01360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f75209ffc20"/>
        <function-ref name="fired" scoped="" ref="0x7f7520a00980"/>
        <function-ref name="get" scoped="" ref="0x7f7520a00020"/>
        <function-ref name="reset" scoped="" ref="0x7f7520a00e08"/>
        <function-ref name="isOn" scoped="" ref="0x7f75209fd0f8"/>
        <function-ref name="set" scoped="" ref="0x7f7520a004a8"/>
        <function-ref name="start" scoped="" ref="0x7f75209ff310"/>
        <function-ref name="stop" scoped="" ref="0x7f75209ff798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f7520a17be0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7520a17be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f7520a12db8"/>
        <function-ref name="test" scoped="" ref="0x7f7520a124a8"/>
        <function-ref name="get" scoped="" ref="0x7f7520a147a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f7520a10270"/>
        <function-ref name="getScale" scoped="" ref="0x7f7520a10748"/>
        <function-ref name="reset" scoped="" ref="0x7f7520a135b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f7520a13130"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520a12930"/>
        <function-ref name="set" scoped="" ref="0x7f7520a14c28"/>
        <function-ref name="start" scoped="" ref="0x7f7520a13a40"/>
        <function-ref name="stop" scoped="" ref="0x7f7520a12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f752093ab68" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f752093ab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TOne" ref="0x7f75217239f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f7520936238"/>
        <function-ref name="fired" scoped="" ref="0x7f75209372b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f7520937bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f7520937738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f75209366c0"/>
        <function-ref name="start" scoped="" ref="0x7f75209398f8"/>
        <function-ref name="stop" scoped="" ref="0x7f7520939dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f7520980dc0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f7520980dc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f75217ef388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f75217ef388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f752097f170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f752097f540" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f752097f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f75209706f8"/>
        <function-ref name="test" scoped="" ref="0x7f7520971db8"/>
        <function-ref name="get" scoped="" ref="0x7f75209730f8"/>
        <function-ref name="setScale" scoped="" ref="0x7f7520970b80"/>
        <function-ref name="getScale" scoped="" ref="0x7f752096f088"/>
        <function-ref name="reset" scoped="" ref="0x7f7520971020"/>
        <function-ref name="overflow" scoped="" ref="0x7f7520973a58"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520970270"/>
        <function-ref name="set" scoped="" ref="0x7f7520973580"/>
        <function-ref name="start" scoped="" ref="0x7f75209714a8"/>
        <function-ref name="stop" scoped="" ref="0x7f7520971930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f75200209d8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f75200209d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f75217ef020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f75217ef020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TOne" ref="0x7f75217239f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f752001d088"/>
        <function-ref name="fired" scoped="" ref="0x7f752001e0f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f752001ea08"/>
        <function-ref name="isRunning" scoped="" ref="0x7f752001e580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f752001d510"/>
        <function-ref name="start" scoped="" ref="0x7f752001f768"/>
        <function-ref name="stop" scoped="" ref="0x7f752001fc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f7520018a80" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f7520018a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f7520014270"/>
        <function-ref name="fired" scoped="" ref="0x7f7520015020"/>
        <function-ref name="get" scoped="" ref="0x7f7520016658"/>
        <function-ref name="reset" scoped="" ref="0x7f75200154a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f75200146f8"/>
        <function-ref name="set" scoped="" ref="0x7f7520016ae0"/>
        <function-ref name="start" scoped="" ref="0x7f7520015930"/>
        <function-ref name="stop" scoped="" ref="0x7f7520015db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f752001da30" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f752001da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f7520019b80"/>
        <function-ref name="test" scoped="" ref="0x7f7520019270"/>
        <function-ref name="get" scoped="" ref="0x7f752001b5d8"/>
        <function-ref name="setScale" scoped="" ref="0x7f7520018088"/>
        <function-ref name="getScale" scoped="" ref="0x7f7520018560"/>
        <function-ref name="reset" scoped="" ref="0x7f752001a4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f752001a020"/>
        <function-ref name="isOn" scoped="" ref="0x7f75200196f8"/>
        <function-ref name="set" scoped="" ref="0x7f752001ba60"/>
        <function-ref name="start" scoped="" ref="0x7f752001a930"/>
        <function-ref name="stop" scoped="" ref="0x7f752001adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f7520932400" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f7520932400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7521763788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7520931020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f752092d108" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f752092d108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TOne" ref="0x7f75217239f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f752092de58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f752092b798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f752092b310"/>
        <function-ref name="overflow" scoped="" ref="0x7f752092bc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f7520929e08" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f7520929e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TOne" ref="0x7f75217239f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f7520928be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f7520916548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f75209160c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f75209169d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f7520915020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f7520915020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f75209110f8"/>
        <function-ref name="test" scoped="" ref="0x7f75209127a8"/>
        <function-ref name="get" scoped="" ref="0x7f7520915ba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f7520911580"/>
        <function-ref name="getScale" scoped="" ref="0x7f7520911a58"/>
        <function-ref name="reset" scoped="" ref="0x7f75209139e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f7520913560"/>
        <function-ref name="isOn" scoped="" ref="0x7f7520912c30"/>
        <function-ref name="set" scoped="" ref="0x7f7520913088"/>
        <function-ref name="start" scoped="" ref="0x7f7520913e70"/>
        <function-ref name="stop" scoped="" ref="0x7f7520912320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f75208f0450" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f75208f0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7521763788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f75208ef1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f75208efae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f75208ef658"/>
        <function-ref name="overflow" scoped="" ref="0x7f75208ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f752090c270" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f752090c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7521763788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f75208f2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f75208f2930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f75208f24a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f75208f2db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f75208ecc38" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f75208ecc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7521763788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f75208eb820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f75208ebe48" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f75208ebe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7521763788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f75208eabe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f75208e9548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f75208e90c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f75208e99d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f75208e03c0" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f75208e03c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7521763788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f75208df150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f7520803390" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f7520803390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75208036e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7520803868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75208039f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520803b78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520803d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f7520801020" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f7520801020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f7520801370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75208014f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7520801680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520801808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520801990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f7520801bd8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f7520801bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f7520800020"/>
        <function-ref name="source" scoped="" ref="0x7f75208001a8"/>
        <function-ref name="address" scoped="" ref="0x7f7520800330"/>
        <function-ref name="destination" scoped="" ref="0x7f75208004b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f7520800640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f75208007c8"/>
        <function-ref name="type" scoped="" ref="0x7f7520800950"/>
        <function-ref name="setType" scoped="" ref="0x7f7520800ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f7520800c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f7520800de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f75207ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f75207ff2a8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f75207ff2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f75207ff5f8"/>
        <function-ref name="noAck" scoped="" ref="0x7f75207ff780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f75207ff908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f751ffe6398" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f751ffe6398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f751ffe66e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f751ffe6870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f751ffe69f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f751ffe6b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f751ffe6d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f751ffe5020" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f751ffe5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f751ffe5370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f751ffe54f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f751ffe5680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f751ffe5808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f751ffe5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f751ffe5bd8" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f751ffe5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f751ffe4020"/>
        <function-ref name="source" scoped="" ref="0x7f751ffe41a8"/>
        <function-ref name="address" scoped="" ref="0x7f751ffe4330"/>
        <function-ref name="destination" scoped="" ref="0x7f751ffe44b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f751ffe4640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f751ffe47c8"/>
        <function-ref name="type" scoped="" ref="0x7f751ffe4950"/>
        <function-ref name="setType" scoped="" ref="0x7f751ffe4ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f751ffe4c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f751ffe4de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f751ffe3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f751ffe32a8" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f751ffe32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f751ffe35f8"/>
        <function-ref name="noAck" scoped="" ref="0x7f751ffe3780"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f751ffe3908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f751ffda530" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f751ffda530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f751ffda880"/>
        <function-ref name="getPayload" scoped="" ref="0x7f751ffdaa08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f751ffdab90"/>
        <function-ref name="cancel" scoped="" ref="0x7f751ffdad18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f751ffd9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f751ffd92c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f751ffd92c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f751ffd9618"/>
        <function-ref name="getPayload" scoped="" ref="0x7f751ffd97a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f751ffd9928"/>
        <function-ref name="cancel" scoped="" ref="0x7f751ffd9ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f751ffd9c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f751ffd9e80" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f751ffd9e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f751ffd81f8"/>
        <function-ref name="source" scoped="" ref="0x7f751ffd8380"/>
        <function-ref name="address" scoped="" ref="0x7f751ffd8508"/>
        <function-ref name="destination" scoped="" ref="0x7f751ffd8690"/>
        <function-ref name="setSource" scoped="" ref="0x7f751ffd8818"/>
        <function-ref name="setDestination" scoped="" ref="0x7f751ffd89a0"/>
        <function-ref name="type" scoped="" ref="0x7f751ffd8b28"/>
        <function-ref name="setType" scoped="" ref="0x7f751ffd8cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f751ffd8e38"/>
        <function-ref name="setGroup" scoped="" ref="0x7f751ffd7020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f751ffd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f752085e020" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f752085e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f752085e370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f752085e4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f752085e680"/>
        <function-ref name="cancel" scoped="" ref="0x7f752085e808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f752085e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f7520816060" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f7520816060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f75208163d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f7520816558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75208166e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520816868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f75208169f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f75208172c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f75208172c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f7520817638"/>
        <function-ref name="getPayload" scoped="" ref="0x7f75208177c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520817948"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520817ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f7520817c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f7520813268" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f7520813268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75208135b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f7520813740"/>
        <function-ref name="getPayload" scoped="" ref="0x7f75208138c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f7520813a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f7520813bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f7520812020" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7f7520812020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7520812370"/>
        <function-ref name="runTask" scoped="" ref="0x7f75208124f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f75208127c0" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7f75208127c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f7520812b10"/>
        <function-ref name="runTask" scoped="" ref="0x7f7520812c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f7520816c38" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f7520816c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f7520814020"/>
        <function-ref name="source" scoped="" ref="0x7f75208141a8"/>
        <function-ref name="address" scoped="" ref="0x7f7520814330"/>
        <function-ref name="destination" scoped="" ref="0x7f75208144b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f7520814640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f75208147c8"/>
        <function-ref name="type" scoped="" ref="0x7f7520814950"/>
        <function-ref name="setType" scoped="" ref="0x7f7520814ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f7520814c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f7520814de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f7520813020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f75207f7a28" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f75207f7a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f75207f7d78"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f75207f5020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f75207f51a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f75207f5330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f75207f54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f75207f7490" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f75207f7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f75207f77e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f75207f5700" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f75207f5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f75207f5a50"/>
        <function-ref name="source" scoped="" ref="0x7f75207f5bd8"/>
        <function-ref name="address" scoped="" ref="0x7f75207f5d60"/>
        <function-ref name="destination" scoped="" ref="0x7f75207f4020"/>
        <function-ref name="setSource" scoped="" ref="0x7f75207f41a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f75207f4330"/>
        <function-ref name="type" scoped="" ref="0x7f75207f44b8"/>
        <function-ref name="setType" scoped="" ref="0x7f75207f4640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f75207f47c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f75207f4950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f75207f4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f75207f11e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.TempC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f75207f11e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f75207f1d30"/>
        <function-ref name="readDone" scoped="" ref="0x7f75206591c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f751ff0fcd8" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.TempC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f751ff0fcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f751ff0e8b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f751ff0ed08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f751ff09908" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.TempC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f751ff09908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f751ff09c58"/>
        <function-ref name="configure" scoped="" ref="0x7f751ff09de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f751ff0ba40" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.TempC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f751ff0ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f751ff0a620"/>
        <function-ref name="readDone" scoped="" ref="0x7f751ff0aa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f751ff09060" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.TempC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f751ff09060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f751ff093b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f751ff09538"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f751ff096c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f75207df020" loc="19:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f75207df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f75207dfb68"/>
        <function-ref name="readDone" scoped="" ref="0x7f75207de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f75207d9cc0" loc="20:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f75207d9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f75207dc870"/>
        <function-ref name="readDone" scoped="" ref="0x7f75207dccf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f75207db8d8" loc="23:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f75207db8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f75207dbc28"/>
        <function-ref name="getChannel" scoped="" ref="0x7f75207dbdb0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f75207d7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f75207d77d8" loc="24:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f75207d77d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f75207d7b28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f75207d7cb0"/>
        <function-ref name="request" scoped="" ref="0x7f75207d7e38"/>
        <function-ref name="granted" scoped="" ref="0x7f75207d6020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f75207d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f75207d1dc8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f75207d1dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f75207cb170"/>
        <function-ref name="configure" scoped="" ref="0x7f75207cb2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f75207d1080" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f75207d1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f75207d13d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f75207d1558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f75207cc440" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f75207cc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f75207cc790"/>
        <function-ref name="cancel" scoped="" ref="0x7f75207cc918"/>
        <function-ref name="dataReady" scoped="" ref="0x7f75207ccaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f75207d32f0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f75207d32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f75207d3640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f75207d37c8"/>
        <function-ref name="request" scoped="" ref="0x7f75207d3950"/>
        <function-ref name="granted" scoped="" ref="0x7f75207d3ad8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f75207d3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f75207c3388" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f75207c3388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f75207c36d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f75207c2c58" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f75207c2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f75207c1020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f75207c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f75207c2300" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f75207c2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f75207c2650"/>
        <function-ref name="cancel" scoped="" ref="0x7f75207c27d8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f75207c2960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7f75207b2888" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f75207b2888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f75207b2bd8"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f75207b2d60"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f75207c0020"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f75207c01a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f75207c0330"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f75207c04b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f75207c0640"/>
        <function-ref name="isComplete" scoped="" ref="0x7f75207c07c8"/>
        <function-ref name="cancel" scoped="" ref="0x7f75207c0950"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f75207c0ad8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f75207c0c60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f75207c0de8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f75207bf020"/>
        <function-ref name="isStarted" scoped="" ref="0x7f75207bf2a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f75207bf430"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f75207bf5b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f75207bf740"/>
        <function-ref name="getValue" scoped="" ref="0x7f75207bf8c8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f75207bfa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f75207c39b8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f75207c39b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f75207c3d08"/>
        <function-ref name="stop" scoped="" ref="0x7f75207c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f75207bfd30" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f75207bfd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f75207b10d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f75207b1260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f75207b13e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f75207b1570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f75207b16f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f75207c4a18" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f75207c4a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f75207c4d68"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f7520780020"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f75207801a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f7520780330"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f75207804b8"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f7520780640"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f75207807c8"/>
        <function-ref name="isComplete" scoped="" ref="0x7f7520780950"/>
        <function-ref name="cancel" scoped="" ref="0x7f7520780ad8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f7520780c60"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f7520780de8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f752077f020"/>
        <function-ref name="startConversion" scoped="" ref="0x7f752077f1a8"/>
        <function-ref name="isStarted" scoped="" ref="0x7f752077f430"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f752077f5b8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f752077f740"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f752077f8c8"/>
        <function-ref name="getValue" scoped="" ref="0x7f752077fa50"/>
        <function-ref name="dataReady" scoped="" ref="0x7f752077fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f752077ecd0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f752077ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f752077b0a0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f752077b228"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f752077b3b0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f752077b538"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f752077b6c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f752077b848"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f752077b9d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f752077bb58"/>
        <function-ref name="cancel" scoped="" ref="0x7f752077bce0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f752077be68"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f752077a020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f752077a1a8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f752077a330"/>
        <function-ref name="isStarted" scoped="" ref="0x7f752077a5b8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f752077a740"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f752077a8c8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f752077aa50"/>
        <function-ref name="getValue" scoped="" ref="0x7f752077abd8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f752077ad60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f75207790c0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f75207790c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f7520779410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f75206d6d18" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f75206d6d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f75206d50d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f75206d5260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f75206d4960" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f75206d4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f75206d4cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f75206d4e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f75206d54a8" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f75206d54a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f75206d57f8"/>
        <function-ref name="requested" scoped="" ref="0x7f75206d5980"/>
        <function-ref name="granted" scoped="" ref="0x7f75206d5b08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f75206d5c90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f75206d5e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f75206d6020" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f75206d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f75206d6390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f75206d6518"/>
        <function-ref name="request" scoped="" ref="0x7f75206d66a0"/>
        <function-ref name="granted" scoped="" ref="0x7f75206d6828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f75206d69b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f75206d40e0" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f75206d40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f75206d4430"/>
        <function-ref name="userId" scoped="" ref="0x7f75206d45b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f751fef9d90" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f751fef9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f751fef8170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f751fef83f8" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f751fef83f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f751fef8748"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f751fef88d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f751fef8a58"/>
        <function-ref name="dequeue" scoped="" ref="0x7f751fef8be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f751fef5200" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f751fef5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f751fef5570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f751fef56f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f751fef4e18" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f751fef4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f751fef31c0"/>
        <function-ref name="configure" scoped="" ref="0x7f751fef3348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f751fef35d0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f751fef35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f751fef3920"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f751fef3aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f751fef3c30"/>
        <function-ref name="dequeue" scoped="" ref="0x7f751fef3db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f751fef5940" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f751fef5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f751fef5c90"/>
        <function-ref name="requested" scoped="" ref="0x7f751fef5e18"/>
        <function-ref name="granted" scoped="" ref="0x7f751fef4020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f751fef41a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f751fef4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f751fef1060" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f751fef1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f751fef13b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f751fef1538"/>
        <function-ref name="led1On" scoped="" ref="0x7f751fef16c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f751fef1848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f751fef19d0"/>
        <function-ref name="get" scoped="" ref="0x7f751fef1b58"/>
        <function-ref name="led1Off" scoped="" ref="0x7f751fef1ce0"/>
        <function-ref name="led0On" scoped="" ref="0x7f751fef0330"/>
        <function-ref name="set" scoped="" ref="0x7f751fef0020"/>
        <function-ref name="led2On" scoped="" ref="0x7f751fef1e68"/>
        <function-ref name="led2Off" scoped="" ref="0x7f751fef01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f751fef64b0" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f751fef64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f751fef6820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f751fef69a8"/>
        <function-ref name="request" scoped="" ref="0x7f751fef6b30"/>
        <function-ref name="granted" scoped="" ref="0x7f751fef6cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f751fef6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f751fef4578" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f751fef4578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f751fef48c8"/>
        <function-ref name="userId" scoped="" ref="0x7f751fef4a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f751fef05f8" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f751fef05f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f751fef0948"/>
        <function-ref name="runTask" scoped="" ref="0x7f751fef0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f75206cfb98" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f75206cfb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f75206bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f75206bb268" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f75206bb268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f75206bb5b8"/>
        <function-ref name="requested" scoped="" ref="0x7f75206bb740"/>
        <function-ref name="granted" scoped="" ref="0x7f75206bb8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f75206bba50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f75206bbbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f75206cf478" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f75206cf478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f75206cf7c8"/>
        <function-ref name="stop" scoped="" ref="0x7f75206cf950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f75206bbe20" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f75206bbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f75206ba1a8"/>
        <function-ref name="userId" scoped="" ref="0x7f75206ba330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f751febfd20" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f751febfd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f751febe0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f751febe2e8" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f751febe2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f751febe638"/>
        <function-ref name="requested" scoped="" ref="0x7f751febe7c0"/>
        <function-ref name="granted" scoped="" ref="0x7f751febe948"/>
        <function-ref name="isOwner" scoped="" ref="0x7f751febead0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f751febec58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f751febf600" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f751febf600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f751febf950"/>
        <function-ref name="stop" scoped="" ref="0x7f751febfad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f751febd020" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f751febd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f751febd370"/>
        <function-ref name="userId" scoped="" ref="0x7f751febd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f75206aca50" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f75206aca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f7521763430"/>
            <typename><typedef-ref name="TMicro" ref="0x7f7521763788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f75206ab828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f75206b2c68" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f75206b2c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f75206b17e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f75206b1c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f75206b0880" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f75206b0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f75206af490"/>
        <function-ref name="readDone" scoped="" ref="0x7f75206af918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f75206ade78" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f75206ade78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f75206ac1f8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f75206ac380"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f75206ac508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7f75206ad020" loc="52:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f75206ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f75206ad370"/>
        <function-ref name="cancel" scoped="" ref="0x7f75206ad4f8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f75206ad680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f752069a0c0" loc="104:/opt/tinyos-2.1.2/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f752069a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f752069a410"/>
        <function-ref name="runTask" scoped="" ref="0x7f752069a598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f7520686560" loc="24:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f7520686560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f752066f0f8"/>
        <function-ref name="readDone" scoped="" ref="0x7f752066f568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f752066fda8" loc="26:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f752066fda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f752066e9e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f752066ee50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f752066c510" loc="27:/opt/tinyos-2.1.2/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f752066c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f752066c880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f752066ca08"/>
        <function-ref name="request" scoped="" ref="0x7f752066cb90"/>
        <function-ref name="granted" scoped="" ref="0x7f752066cd18"/>
        <function-ref name="isOwner" scoped="" ref="0x7f752066b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f75206618d8" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f75206618d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f7520661c28"/>
        <function-ref name="getChannel" scoped="" ref="0x7f7520661db0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f752065e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f75206588d8" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/DemoSensorC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.PhotoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f75206588d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f7520657458"/>
        <function-ref name="readDone" scoped="" ref="0x7f75206578a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f751feafbc0" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.PhotoC.DemoChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f751feafbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f751feae740"/>
        <function-ref name="readDone" scoped="" ref="0x7f751feaeb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f751fea9740" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.PhotoC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f751fea9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f751fea9a90"/>
        <function-ref name="configure" scoped="" ref="0x7f751fea9c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f751feab8e0" loc="22:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.PhotoC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f751feab8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f751feaa458"/>
        <function-ref name="readDone" scoped="" ref="0x7f751feaa8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f751feaae60" loc="24:/opt/tinyos-2.1.2/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="WirelessNetworkNodeAppC.PhotoC.DemoChannel.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f751feaae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f751fea91e8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f751fea9370"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f751fea94f8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f75216d9a18" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f75216694e8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521669278" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f75216684e8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521668278" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f7521665690" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75216650c8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f75216653d8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f75216647c8" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f75216678d8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521667348" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7521667658" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f752164f920" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f752164f020" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f752164f380" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f752164f690" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f752164ac68" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752164a6a0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f752164a9b0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f752164ee28" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f752164dbe8" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752164d978" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f752164e030" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752164ca60" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f752164cd88" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f7521641020" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f7521642ca0" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f7521640430" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f75216401c0" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f7521642328" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7521641808" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f75217c9070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f75217c9860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f7521650a70" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7521650a70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f752163d328" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f752163c020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7521650a70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f752163da38" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f752163dd38" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f7521650a70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f7521646a40" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
              <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521646140" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f7521646468" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7521646778" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f7521634020" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f7521634758" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f7521633020" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f7521633e70" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f7521630480" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7521630c18" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f7521633738" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f752162f768" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f752162f4f8" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f75216357e0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f7521632608" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f7521632d20" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f7521654a28" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f7521683bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f75216547b8" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f752165eb40" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f752165e8d0" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f75216600d8" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f7521660b30" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f75216608c0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f752165b2e0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f752165dce8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f752165b060" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f752165ce78" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f752165c8c0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f752165cbf8" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f7521658640" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f75216583d0" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f75216578d8" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f7521657358" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f7521657658" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f7521683848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f752165a4f8" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f752165a288" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f7521653e00" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f7521683bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f7521653850" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f7521653b80" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f7521683bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f7521655bd8" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f7521683bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f75215f5d78" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f75215ea5e8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f75215ea378" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f75215f0d60" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f75215ed7b0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f75215ed540" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f75215ec290" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f75215ec020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f75215ecad8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f75215dad70" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f75215d8460" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f75215da020" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f75215d7258" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f75215da6c0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f75215d8b18" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f75215db258" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f75215db8c8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f75217d2378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f75217d1258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f75217d2a90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f752171ce28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f75216fc4f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f752178e940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f75216fd020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f75213fe6e8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f75213fe108" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f75213fe468" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f75213f2728" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213f2140" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f75213f24a8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f75213f17e8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213f1578" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f75213f3978" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f75213f3020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f75213fbcb8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f75213fcb80" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213fc910" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f75213f7cb0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213f7a40" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f75213f6020" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213f8c38" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f75213ea730" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213ea4c0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f75213ee9e8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213ee400" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f75213ee768" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f75213eb7e0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213eb570" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f75213ecd68" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213ec780" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f75213ecae8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f75213e9670" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213e9400" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x7f75213e6e00" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f75213e6648" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f75213e63d8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f75213e55f8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f75213ef748" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f75213ef748"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f75213ef978" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75213ef978"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f75213e1670" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75213ef978"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213e1400" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f75213e0750" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213e04e0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f75213e34e8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213e3278" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f75213df980" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75213ef978"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213df3c0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f75213df700" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75213ef978"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7f75213c96d8" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f75213c96d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f75213c46a8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213c4438" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f75213c6c88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f75213c96d8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213c6a18" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f75213c6290" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213c6020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f75213c3388" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f75213c96d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213c4d98" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f75213c3108" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7f75213c96d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f75213ba720" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f75213ba720"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f75213b6020" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f75213b8020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213bbc50" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f7521395780" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f7521397760" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f75213a1cf8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f7521395020" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f75213941d8" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7f75213915b8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f75216978b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521391348" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f7521392258" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f75216978b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f7521392c08" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f75216978b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521392998" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f752138e020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f75216978b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752138f938" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f752138fca8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f75216978b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f752138f2a0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f75216978b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521391c80" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f752138f020" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f75216978b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7f752138d2d0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f75216974c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752138d060" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7f752138b020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f75216974c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752138d948" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f752138dca8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7f75216974c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f752138e940" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752138e6d0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f752138b728" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f75216974c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f752139fa70" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f75216978b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f752139f170" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f75216978b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f752139f4d0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f752139f7e0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f752139bdf0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752139b828" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f752139bb38" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f752139b020" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f752139e7e8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752139e578" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f752139d6e8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752139d140" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f752139d468" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7f7521347020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7f752135b938" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752135b6c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7f752134cd10" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f7521683bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752134caa0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7f7521349370" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521349100" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f752134d6b0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752134d440" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f752134f020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752135dc70" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f752134c388" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752134dd88" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f752134c108" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f752134fce0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752134f728" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f752134fa60" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f752134b9b0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f7521683bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752134b400" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f752134b730" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f7521683bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7f7521355598" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7f7521353020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7f7521351290" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521351020" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7f7521353aa8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521353838" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7f75213525b8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521352348" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7f75213298e0" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7f752132aa70" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f752169a540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7f752132a800" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7f752169a540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f75213291d8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7f752132a020" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7f75213280d8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7f752169a540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7f7521321290" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521321020" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f75213256f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521325488" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f7521324d80" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f75213245d0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521324020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f7521324350" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f752132cbf0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752132c980" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f75213237f0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521323580" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f752136fc90" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7f752136f4e8" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752136f278" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7f752136d780" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752136d510" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7f752136c020" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7f752136cb28" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752136c8b8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7f752135c338" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752135c0c8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7f75213637a8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7f7521363040" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7521365a30" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f7521365d90" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f7521369cd0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521369a60" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7f75213677b8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521367548" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7f7521366640" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7521366060" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f75213663c0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7f752136a468" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f75213692a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752136ac70" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f7521369020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f7521365290" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521365020" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7f7521337290" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521337020" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7f752133aa08" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752133a798" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7f75213455c0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521345020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7f7521345340" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7f75213425b8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521342348" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7f7521332020" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213339c8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f7521333cf8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7f7521343aa8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521343838" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7f7521339808" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521339278" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7f7521339588" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7f752133f020" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f75213418a8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f7521341c08" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7f7521333290" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521333020" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7f7521343030" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521345d90" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7f752133e920" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752133e6b0" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7f752133fe50" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f752133f870" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f752133fbd0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7f7521330548" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f75216978b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7f7521332a20" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213327b0" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7f7521331d88" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f75216974c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7f7521335748" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521335198" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f75213354c8" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7f75213410a8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521342dd0" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7f752133a020" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752133ba38" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7f752133bd58" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7f7521336020" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213379e8" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7f7521337d08" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f752132e020" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521330c88" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7f752133d678" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752133d100" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f752133d3f8" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7f75213467f0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521346580" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7f7521331538" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213312c8" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7f7521336a28" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213367b8" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7f752133b290" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752133b020" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7f752135e020" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521360a20" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7f7521360d50" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7f752135e7a8" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7f7521361830" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75213615c0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7f7521360290" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521360020" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7f7521358ad8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521358868" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7f7521358020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521362cf8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7f7521357328" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7f7521357d78" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521357b08" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f75212c5b20" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f75212c5b20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f75212c5d50" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75212c5d50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f75212bd7a0" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75212c5d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f75212c07c0" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f75212bed70" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75212c5d50"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75212c5d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f75212be7d0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75212c5d50"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f75212beaf0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75212c5d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f75212be020" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f75212bc020" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75212c5d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f75212c1848" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75212c5d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f75212c15d8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f75212c5d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f75212c0070" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7f75212aea18" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7f75212ad328" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7f75212adc40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7f75212ae328" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x7f75212798c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521279658" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f7521275290" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521275020" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f75212767a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f75212761f8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f7521276520" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f7521278c10" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
              <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521278968" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f75212618f8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f75212607c8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f75212600d8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f7521683bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f7521261118" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f7521683bf8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f7521264ae8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f7521683bf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f7521264e20" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f75211bac90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f75211b7580" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f75211b3bf0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f75211b3440" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f75211b5360" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f75211b5b50" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f75211a9ac8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f75211b4c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f75211a9858" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f75211b4c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f75211aeae8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f75211ab5e8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f75211b4c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f75211ab378" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f75211b4c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f75211a9020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f75211b4c40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7f7521050e70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
              <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521050bc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7f7521050290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7521050020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f752103e020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f752103fce0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7f752103e790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7521048cf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f7521048a88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f752103f640" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f752103f3d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7f7521044020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f7521046d80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7f75210434e0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f7521043270" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7f7521044ab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f7521044840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7f7521042020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f7521043ce8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7f75210465b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f7521046340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f7521682020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x7f7520fb3328" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f7520fb2378" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f7520fb2d80" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f7520fb2b10" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7f7520fb0538" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7f7520fb3b58" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f7520fb0d68" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7f7520fb59f0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7520fb5780" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7f7520fadd88" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f7520fad580" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f7520fad310" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f7520f3b540" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f7520f3ed78" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f7520f129f0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f7520f129f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f7520f0e4c8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f7520f129f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f7520f0e258" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f7520f129f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7f7520ee9988" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7520ee9718" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7520eeb8b0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7520eeb640" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7f7520eea5f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7520eea060" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f7520eea370" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7520ee9020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7520eead18" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x7f7520eb8020" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f7520eb9c68" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f7520eb94e0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7520e48338" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7520e48338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f7520e40020" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f7520e45710" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f7520e435b8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f7520e43020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f7520e43338" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f7520e447b8" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f7520e3f020" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f7520e40740" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f7520e44020" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f7520e48e08" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f7520e48b98" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f7520e425b8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f7520e42020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f7520e42338" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f7520e478a0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f7520e47630" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f75220fe608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7520e45070" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7520e2f530" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7520e2f530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f7520e2f760" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520e2f760"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f7520e2e020" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520e2f760"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f7520e2d070" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f7520e2e838" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f7520e2d760" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f7520e00d28" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f7520e02c20" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f7520e06a48" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f7520e005c8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f7520e00358" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f7520e024c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f7520e02250" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f7520dff6e0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f7520dff470" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f7520e031d8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f7520e03b00" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f7520e03890" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7f7520def328" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7f7520df23a0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f7520df2ab8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f7520df0328" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f7520defad8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f7520df0af8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f7520df31d8" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f752174a978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f752174ad80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f7520df3b90" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f752174a978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f752174ad80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f7520df3920" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f752174a978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f752174ad80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f7520dfd1c8" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520dfd1c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f7520df97f0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f7520dfcb60" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7520dfda80" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520dfd1c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f7520dfa290" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f7520df8020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7520dfc420" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520dfd1c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f7520dfc1b0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520dfd1c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f7520dfa988" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7520df90d8" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f7520e11418" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f7520e11418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f7520e0c900" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f7520e0da40" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7520e11cb8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f7520e11418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f7520e0b290" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f7520e0b020" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f7520e0ba10" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f7520e0e4c0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f7520e10d50" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f7520e0c1d8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7520e10630" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f7520e11418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f7520e103c0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f7520e11418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f7520e0ebb8" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7520e0d328" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f7520c11908" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f7520c11908"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f7520c11b38" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520c11b38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f7520c0a630" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520c11b38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f7520c0a3c0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520c11b38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f7520c0e1d8" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f7520c0c290" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f7520c0eb00" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f7520c0e890" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f7520c129a0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f7520c15020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7520c18ce0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f7520c14338" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7520c140c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f7520c15820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f7520c14d40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7520c14ad0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f7520b264d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520b264d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f7520b1e020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f7520b1fc98" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f7520b20e18" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f7520b26d88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520b264d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f7520b22108" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520b264d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f7520b23e28" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520b264d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f7520b22848" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f7520b1f5c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f7520b236f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520b264d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f7520b23480" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f7520b264d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f7520b20020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7520b20708" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f7520b06b88" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f7520b06278" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f7520b065d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7520b068f8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f7520b02020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f7520b042b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f7520b04610" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7520b04930" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f7520b04c78" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f7520b08020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f7520b0bc18" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f7520aef328" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f7520ae6c40" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f7520aea7a8" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f7520ae5610" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f7520ae53a0" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f7520af0ba8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f7520ae7338" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f7520ae70c8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f7520aeb020" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f7520aecc88" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f7520aee1d8" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f7520ae1de0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f7520ae1b70" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f7520aeb758" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f7520ae3690" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f7520ae3420" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f7520ae2538" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f7520ae6518" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f7520ae62a8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f7520ae14a0" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f7520ae8290" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f7520ae8020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f7520aeeb30" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7520aee8c0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f7520aea0a8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f7520aebdf8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f7520ae7b48" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f7520ae5d18" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f7520ae3d80" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f7520ae2c80" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f7520ae89a8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f7520aefa40" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f7520aec4e0" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f7520aec270" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f7520a87748" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f7520a86020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7f7520a261d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f7520a23578" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f7520a27328" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f7520a22780" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f7520a22020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f7520a23c78" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f7520a254c0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f7520a25250" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f7520a21290" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f7520a21020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f7520a27a58" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7f7520a25de8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f7520a25b78" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f7520a26b00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f7520a26890" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f75208782a0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f752087bc30" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7520878020" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f75208745e8" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7520874020" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f7520874330" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f7520873740" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f75208764e8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7520876278" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f75208758f0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f7520875348" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f752166c510"/>
                <typename><typedef-ref name="message_t" ref="0x7f752166baa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f7520875670" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f75207e2468" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f75207e5bf8" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f75207e2c48" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f75207decb8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f75207decb8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f75207da5c0" loc="58:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f75207d92e0" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f75207decb8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f75207dad08" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f75207d9060" loc="66:/opt/tinyos-2.1.2/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f75207decb8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f75207c99b8" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f75207cacd8" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f75207c9060" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f75207c93c8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f75207c9718" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f75207c7a70" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f75207c89e0" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f75207c8d00" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f75207c7060" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f75207c7410" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f75207c77c0" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f75207cf6f8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f75207d2a10" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f75207d2d68" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f75207cf108" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f75207cf458" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f75207cc020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f75207cd6d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f75207cd138" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f75207cd458" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f75207b6020" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f75207be0d8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f75217703a0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f7521770858"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f75207b4290" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f75207b4020" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f75220ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f75207b6860" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f75207bbc60" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f75207beab0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f75217703a0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f7521770858"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f75207be840" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f75217703a0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f7521770858"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f75207baab8" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f75207b57b8" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f75207b4a28" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f75207ba378" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f75207b9978" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f75207b9258" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f75207b70d8" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f75207b5020" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f75207bcd18" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f752176ace0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f7521769438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f75207bcaa8" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f752176ace0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f7521769438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f75207b7890" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f75207bc328" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f752176ace0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f7521769438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f75207bb500" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f75207b2588" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f75207b2318" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f75220ffb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f752073fdf8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f75217cdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f752073ee38" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f752073f5d8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f752073e670" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f75217f29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f752073d760" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f75206cb0d8" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
